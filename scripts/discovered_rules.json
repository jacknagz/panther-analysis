{
  "basic_mapping": {
    "Standard.ImpossibleTravel.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/impossible_travel_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/impossible_travel_login.yml"
      ]
    ],
    "Standard.BruteForceByUser": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/brute_force_by_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/brute_force_by_user.yml"
      ]
    ],
    "Standard.MFADisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/mfa_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/mfa_disabled.yml"
      ]
    ],
    "Standard.DNSBase64": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/standard_dns_base64.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/standard_dns_base64.yml"
      ]
    ],
    "Standard.BruteForceByIP": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/brute_force_by_ip.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/brute_force_by_ip.yml"
      ]
    ],
    "Standard.AdminRoleAssigned": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/admin_assigned.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/admin_assigned.yml"
      ]
    ],
    "Standard.SignInFromRogueState": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/sign_in_from_rogue_state.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/sign_in_from_rogue_state.yml"
      ]
    ],
    "Standard.MaliciousSSODNSLookup": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/malicious_sso_dns_lookup.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/standard_rules/malicious_sso_dns_lookup.yml"
      ]
    ],
    "Zendesk.UserSuspension": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_user_suspension.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_user_suspension.yml"
      ]
    ],
    "Zendesk.AccountOwnerChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_new_owner.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_new_owner.yml"
      ]
    ],
    "Zendesk.UserRoleChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_user_role.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_user_role.yml"
      ]
    ],
    "Zendesk.MobileAppAccessUpdated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_mobile_app_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_mobile_app_access.yml"
      ]
    ],
    "Zendesk.SensitiveDataRedactionOff": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_sensitive_data_redaction.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_sensitive_data_redaction.yml"
      ]
    ],
    "Zendesk.NewAPIToken": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_new_api_token.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_new_api_token.yml"
      ]
    ],
    "Zendesk.UserAssumption": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_user_assumption.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zendesk_rules/zendesk_user_assumption.yml"
      ]
    ],
    "Push.Security.New.App.Detected": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_new_app_detected.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_new_app_detected.yml"
      ]
    ],
    "Push.Security.Open.Security.Finding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_open_security_finding.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_open_security_finding.yml"
      ]
    ],
    "Push.Security.Phishing.Attack": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_phishing_attack.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_phishing_attack.yml"
      ]
    ],
    "Push.Security.MFA.Method.Changed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_mfa_method_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_mfa_method_changed.yml"
      ]
    ],
    "Push.Security.Unauthorized.IdP.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_unauthorized_idp_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_unauthorized_idp_login.yml"
      ]
    ],
    "Push.Security.Authorized.IdP.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_authorized_idp_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_authorized_idp_login.yml"
      ]
    ],
    "Push.Security.App.Banner.Acknowledged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_app_banner_acknowledged.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_app_banner_acknowledged.yml"
      ]
    ],
    "Push.Security.Phishable.MFA.Method": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_phishable_mfa_method.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_phishable_mfa_method.yml"
      ]
    ],
    "Push.Security.New.SaaS.Account.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_new_saas_account_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/push_security_rules/push_security_new_saas_account_created.yml"
      ]
    ],
    "Netskope.AdminLoggedOutLoginFailures": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_admin_logged_out.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_admin_logged_out.yml"
      ]
    ],
    "Netskope.AdminUserChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_admin_user_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_admin_user_change.yml"
      ]
    ],
    "Netskope.ManyDeletes": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_many_deletes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_many_deletes.yml"
      ]
    ],
    "Netskope.NetskopePersonnelActivity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_personnel_action.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_personnel_action.yml"
      ]
    ],
    "Netskope.UnauthorizedAPICalls": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_unauthorized_api_calls.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/netskope_rules/netskope_unauthorized_api_calls.yml"
      ]
    ],
    "Auth0.MFA.Risk.Assessment.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_risk_assessment_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_risk_assessment_disabled.yml"
      ]
    ],
    "Auth0.Post.Login.Action.Flow": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_post_login_action_flow.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_post_login_action_flow.yml"
      ]
    ],
    "Auth0.MFA.Policy.Enabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_policy_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_policy_enabled.yml"
      ]
    ],
    "Auth0.MFA.Factor.Setting.Enabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_factor_setting_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_factor_setting_enabled.yml"
      ]
    ],
    "Auth0.User.Joined.Tenant": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_user_joined_tenant.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_user_joined_tenant.yml"
      ]
    ],
    "Auth0.CIC.Credential.Stuffing": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_cic_credential_stuffing.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_cic_credential_stuffing.yml"
      ]
    ],
    "Auth0.MFA.Risk.Assessment.Enabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_risk_assessment_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_risk_assessment_enabled.yml"
      ]
    ],
    "Auth0.Integration.Installed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_integration_installed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_integration_installed.yml"
      ]
    ],
    "Auth0.User.Invitation.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_user_invitation_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_user_invitation_created.yml"
      ]
    ],
    "Auth0.Custom.Role.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_custom_role_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_custom_role_created.yml"
      ]
    ],
    "Auth0.MFA.Policy.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_policy_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/auth0_rules/auth0_mfa_policy_disabled.yml"
      ]
    ],
    "MongoDB.User.Roles.Changed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_user_roles_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_user_roles_changed.yml"
      ]
    ],
    "MongoDB.Atlas.ApiKeyCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_atlas_api_key_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_atlas_api_key_created.yml"
      ]
    ],
    "MongoDB.org.Membership.Restriction.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_org_membership_restriction_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_org_membership_restriction_disabled.yml"
      ]
    ],
    "MongoDB.External.UserInvited.NoConfig": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_external_user_invited_no_config.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_external_user_invited_no_config.yml"
      ]
    ],
    "MongoDB.Identity.Provider.Activity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_identity_provider_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_identity_provider_activity.yml"
      ]
    ],
    "MongoDB.Logging.Toggled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_logging_toggled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_logging_toggled.yml"
      ]
    ],
    "MongoDB.Alerting.Disabled.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_alerting_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_alerting_disabled.yml"
      ]
    ],
    "MongoDB.Access.Allowed.From.Anywhere": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_access_allowed_from_anywhere.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_access_allowed_from_anywhere.yml"
      ]
    ],
    "MongoDB.2FA.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_2fa_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_2fa_disabled.yml"
      ]
    ],
    "MongoDB.User.Created.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_user_created_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_user_created_or_deleted.yml"
      ]
    ],
    "MongoDB.External.UserInvited": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_external_user_invited.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/mongodb_rules/mongodb_external_user_invited.yml"
      ]
    ],
    "GitHub.Org.Moderators.Add": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_moderators_add.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_moderators_add.yml"
      ]
    ],
    "Github.Repo.VulnerabilityDismissed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_vulnerability_dismissed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_vulnerability_dismissed.yml"
      ]
    ],
    "Github.Public.Repository.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_public_repository_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_public_repository_created.yml"
      ]
    ],
    "GitHub.User.RoleUpdated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_user_role_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_user_role_updated.yml"
      ]
    ],
    "GitHub.Action.Failed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_action_failed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_action_failed.yml"
      ]
    ],
    "GitHub.Branch.PolicyOverride": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_branch_policy_override.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_branch_policy_override.yml"
      ]
    ],
    "GitHub.Org.AuthChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_auth_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_auth_modified.yml"
      ]
    ],
    "GitHub.Org.IpAllowlist": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_ip_allowlist.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_ip_allowlist.yml"
      ]
    ],
    "Github.Organization.App.Integration.Installed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_organization_app_integration_installed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_organization_app_integration_installed.yml"
      ]
    ],
    "GitHub.Branch.ProtectionDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_branch_protection_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_branch_protection_disabled.yml"
      ]
    ],
    "Github.Repo.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_created.yml"
      ]
    ],
    "GitHub.Repo.RulesetModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_ruleset_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_ruleset_modified.yml"
      ]
    ],
    "Github.Repo.CollaboratorChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_collaborator_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_collaborator_change.yml"
      ]
    ],
    "GitHub.Team.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_team_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_team_modified.yml"
      ]
    ],
    "GitHub.Webhook.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_webhook_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_webhook_modified.yml"
      ]
    ],
    "GitHub.Repo.InitialAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_initial_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_initial_access.yml"
      ]
    ],
    "GitHub.Repo.HookModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_hook_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_hook_modified.yml"
      ]
    ],
    "GitHub.Secret.Scanning.Alert.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_secret_scanning_alert_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_secret_scanning_alert_created.yml"
      ]
    ],
    "GitHub.Advanced.Security.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_advanced_security_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_advanced_security_change.yml"
      ]
    ],
    "GitHub.Org.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_org_modified.yml"
      ]
    ],
    "Github.Repository.Transfer": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repository_transfer.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repository_transfer.yml"
      ]
    ],
    "Github.Repo.VisibilityChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_visibility_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_repo_visibility_change.yml"
      ]
    ],
    "GitHub.User.AccessKeyCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_user_access_key_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/github_rules/github_user_access_key_created.yml"
      ]
    ],
    "Teleport.CompanyDomainLoginWithoutSAML": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_company_domain_login_without_saml.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_company_domain_login_without_saml.yml"
      ]
    ],
    "Teleport.LockCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_lock_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_lock_created.yml"
      ]
    ],
    "Teleport.SAMLLoginWithoutCompanyDomain": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_saml_login_not_company_domain.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_saml_login_not_company_domain.yml"
      ]
    ],
    "Teleport.SuspiciousCommands": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_suspicious_commands.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_suspicious_commands.yml"
      ]
    ],
    "Teleport.AuthErrors": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_auth_errors.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_auth_errors.yml"
      ]
    ],
    "Teleport.CreateUserAccounts": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_create_user_accounts.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_create_user_accounts.yml"
      ]
    ],
    "Teleport.SAMLCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_saml_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_saml_created.yml"
      ]
    ],
    "Teleport.RootLogin": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_root_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_root_login.yml"
      ]
    ],
    "Teleport.LongLivedCerts": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_long_lived_certs.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_long_lived_certs.yml"
      ]
    ],
    "Teleport.ScheduledJobs": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_scheduled_jobs.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_scheduled_jobs.yml"
      ]
    ],
    "Teleport.RoleCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_role_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_role_created.yml"
      ]
    ],
    "Teleport.LocalUserLoginWithoutMFA": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_local_user_login_without_mfa.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_local_user_login_without_mfa.yml"
      ]
    ],
    "Teleport.NetworkScanning": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_network_scanning.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gravitational_teleport_rules/teleport_network_scanning.yml"
      ]
    ],
    "Tracebit.Alert": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tracebit_rules/tracebit_alert.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tracebit_rules/tracebit_alert.yml"
      ]
    ],
    "Amazon.EKS.AnonymousAPIAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_eks_rules/anonymous_api_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_eks_rules/anonymous_api_access.yml"
      ]
    ],
    "Amazon.EKS.Audit.SystemNamespaceFromPublicIP": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_eks_rules/system_namespace_public_ip.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_eks_rules/system_namespace_public_ip.yml"
      ]
    ],
    "Amazon.EKS.Audit.Multiple403": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_eks_rules/source_ip_multiple_403.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_eks_rules/source_ip_multiple_403.yml"
      ]
    ],
    "GCP.Access.Attempts.Violating.IAP.Access.Controls": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_http_lb_rules/gcp_access_attempts_violating_iap_access_controls.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_http_lb_rules/gcp_access_attempts_violating_iap_access_controls.yml"
      ]
    ],
    "OneLogin.ThresholdAccountsDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_threshold_accounts_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_threshold_accounts_deleted.yml"
      ]
    ],
    "OneLogin.PasswordAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_password_accessed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_password_accessed.yml"
      ]
    ],
    "OneLogin.AuthFactorRemoved": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_remove_authentication_factor.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_remove_authentication_factor.yml"
      ]
    ],
    "OneLogin.HighRiskFailedLogin": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_high_risk_failed_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_high_risk_failed_login.yml"
      ]
    ],
    "OneLogin.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_login.yml"
      ]
    ],
    "OneLogin.ThresholdAccountsModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_threshold_accounts_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_threshold_accounts_modified.yml"
      ]
    ],
    "OneLogin.UserAccountLocked": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_user_account_locked.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_user_account_locked.yml"
      ]
    ],
    "OneLogin.PasswordChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_password_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_password_changed.yml"
      ]
    ],
    "OneLogin.UserAssumption": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_user_assumed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_user_assumed.yml"
      ]
    ],
    "OneLogin.UnauthorizedAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_unauthorized_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_unauthorized_access.yml"
      ]
    ],
    "OneLogin.ActiveLoginActivity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_active_login_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onelogin_rules/onelogin_active_login_activity.yml"
      ]
    ],
    "Box.Item.Shared.Externally": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_item_shared_externally.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_item_shared_externally.yml"
      ]
    ],
    "Box.Malicious.Content": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_malicious_content.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_malicious_content.yml"
      ]
    ],
    "Box.Event.Triggered.Externally": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_event_triggered_externally.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_event_triggered_externally.yml"
      ]
    ],
    "Box.Shield.Suspicious.Alert": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_suspicious_login_or_session.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_suspicious_login_or_session.yml"
      ]
    ],
    "Box.New.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_new_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_new_login.yml"
      ]
    ],
    "Box.Content.Workflow.Policy.Violation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_policy_violation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_policy_violation.yml"
      ]
    ],
    "Box.Shield.Anomalous.Download": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_anomalous_download.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_anomalous_download.yml"
      ]
    ],
    "Box.Untrusted.Device": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_untrusted_device.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_untrusted_device.yml"
      ]
    ],
    "Box.Access.Granted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_access_granted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_access_granted.yml"
      ]
    ],
    "Box.Large.Number.Permission.Updates": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_user_permission_updates.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_user_permission_updates.yml"
      ]
    ],
    "Box.Large.Number.Downloads": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_user_downloads.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/box_rules/box_user_downloads.yml"
      ]
    ],
    "OnePassword.Unusual.Client": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onepassword_rules/onepassword_unusual_client.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onepassword_rules/onepassword_unusual_client.yml"
      ]
    ],
    "OnePassword.Lut.Sensitive.Item": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onepassword_rules/onepassword_lut_sensitive_item_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onepassword_rules/onepassword_lut_sensitive_item_access.yml"
      ]
    ],
    "OnePassword.Sensitive.Item": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onepassword_rules/onepassword_sensitive_item_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/onepassword_rules/onepassword_sensitive_item_access.yml"
      ]
    ],
    "Zoom.User.Promoted.to.Privileged.Role": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_user_promoted_to_privileged_role.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_user_promoted_to_privileged_role.yml"
      ]
    ],
    "Zoom.Sign.In.Requirements.Changed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_sign_in_requirements_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_sign_in_requirements_changed.yml"
      ]
    ],
    "Zoom.Sign.In.Method.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_sign_in_method_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_sign_in_method_modified.yml"
      ]
    ],
    "Zoom.Two.Factor.Authentication.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_two_factor_authentication_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_two_factor_authentication_disabled.yml"
      ]
    ],
    "Zoom.All.Meetings.Secured.With.One.Option.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_all_meetings_secured_with_one_option_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_all_meetings_secured_with_one_option_disabled.yml"
      ]
    ],
    "Zoom.New.Meeting.Passcode.Required.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_new_meeting_passcode_required_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_new_meeting_passcode_required_disabled.yml"
      ]
    ],
    "Zoom.Automatic.Sign.Out.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_automatic_sign_out_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_automatic_sign_out_disabled.yml"
      ]
    ],
    "Zoom.PasscodeDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_operation_passcode_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zoom_operation_rules/zoom_operation_passcode_disabled.yml"
      ]
    ],
    "SentinelOne.Alert.Passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sentinelone_rules/sentinelone_alert_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sentinelone_rules/sentinelone_alert_passthrough.yml"
      ]
    ],
    "SentinelOne.Threats": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sentinelone_rules/sentinelone_threats.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sentinelone_rules/sentinelone_threats.yml"
      ]
    ],
    "Sublime.Message.Flagged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_message_flagged.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_message_flagged.yml"
      ]
    ],
    "Sublime.Message.Source.Deleted.Or.Deactivated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_message_source_deleted_or_deactivated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_message_source_deleted_or_deactivated.yml"
      ]
    ],
    "Sublime.Mailbox.Deactivated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_mailboxes_deactivated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_mailboxes_deactivated.yml"
      ]
    ],
    "Sublime.Rules.Deleted.Or.Deactivated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_rules_deleted_or_deactivated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/sublime_rules/sublime_rules_deleted_or_deactivated.yml"
      ]
    ],
    "Decoy.DynamoDB.Accessed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_dynamodb_accessed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_dynamodb_accessed.yml"
      ]
    ],
    "Decoy.S3.Accessed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_s3_accessed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_s3_accessed.yml"
      ]
    ],
    "Decoy.Secret.Accessed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_secret_accessed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_secret_accessed.yml"
      ]
    ],
    "Decoy.Systems.Manager.Parameter.Accessed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_systems_manager_parameter_accessed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_systems_manager_parameter_accessed.yml"
      ]
    ],
    "Decoy.IAM.Assumed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_iam_assumed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_securityfinding_rules/decoy_iam_assumed.yml"
      ]
    ],
    "Panther.SAML.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_saml_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_saml_modified.yml"
      ]
    ],
    "Panther.User.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_user_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_user_modified.yml"
      ]
    ],
    "Panther.Detection.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_detection_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_detection_deleted.yml"
      ]
    ],
    "Panther.Sensitive.Role": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_sensitive_role_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/panther_audit_rules/panther_sensitive_role_created.yml"
      ]
    ],
    "Duo.Admin.Create.Admin": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_create_admin.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_create_admin.yml"
      ]
    ],
    "Duo.Admin.Bypass.Code.Viewed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_bypass_code_viewed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_bypass_code_viewed.yml"
      ]
    ],
    "Duo.Admin.Bypass.Code.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_bypass_code_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_bypass_code_created.yml"
      ]
    ],
    "DUO.User.Action.Fraudulent": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_action_fraudulent.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_action_fraudulent.yml"
      ]
    ],
    "DUO.User.Denied.AnomalousPush": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_anomalous_push.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_anomalous_push.yml"
      ]
    ],
    "Duo.Admin.User.MFA.Bypass.Enabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_user_mfa_bypass_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_user_mfa_bypass_enabled.yml"
      ]
    ],
    "Duo.Admin.Lockout": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_lockout.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_lockout.yml"
      ]
    ],
    "Duo.Admin.Policy.Updated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_policy_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_policy_updated.yml"
      ]
    ],
    "DUO.Admin.Action.MarkedFraudulent": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_marked_push_fraudulent.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_marked_push_fraudulent.yml"
      ]
    ],
    "Duo.Admin.SSO.SAML.Requirement.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_sso_saml_requirement_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_sso_saml_requirement_disabled.yml"
      ]
    ],
    "Duo.Admin.New.Admin.API.App.Integration": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_new_admin_api_app_integration.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_new_admin_api_app_integration.yml"
      ]
    ],
    "Duo.Admin.App.Integration.Secret.Key.Viewed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_app_integration_secret_key_viewed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_app_integration_secret_key_viewed.yml"
      ]
    ],
    "DUO.User.BypassCode.Used": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_bypass_code_used.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_bypass_code_used.yml"
      ]
    ],
    "Duo.Admin.MFA.Restrictions.Updated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_mfa_restrictions_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_admin_mfa_restrictions_updated.yml"
      ]
    ],
    "DUO.User.Endpoint.Failure": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_endpoint_failure_multi.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/duo_rules/duo_user_endpoint_failure_multi.yml"
      ]
    ],
    "Microsoft.Graph.Passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft_graph_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft_graph_passthrough.yml"
      ]
    ],
    "Microsoft365.MFA.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft365_mfa_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft365_mfa_disabled.yml"
      ]
    ],
    "Microsoft365.Exchange.External.Forwarding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft_exchange_external_forwarding.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft_exchange_external_forwarding.yml"
      ]
    ],
    "Microsoft365.Brute.Force.Login.by.User": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft365_brute_force_login_by_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft365_brute_force_login_by_user.yml"
      ]
    ],
    "Microsoft365.External.Document.Sharing": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft365_external_sharing.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/microsoft_rules/microsoft365_external_sharing.yml"
      ]
    ],
    "GCP.Project.ExternalUserOwnershipInvite": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_invite_external_user_as_owner.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_invite_external_user_as_owner.yml"
      ]
    ],
    "GCP.DNS.Zone.Modified.or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_dns_zone_modified_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_dns_zone_modified_or_deleted.yml"
      ]
    ],
    "GCP.GCS.Public": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_gcs_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_gcs_public.yml"
      ]
    ],
    "GCP.Inbound.SSO.Profile.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_inbound_sso_profile_created_or_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_inbound_sso_profile_created_or_updated.yml"
      ]
    ],
    "GCP.iam.serviceAccountKeys.create": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_service_account_key_create.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_service_account_key_create.yml"
      ]
    ],
    "GCP.Permissions.Granted.to.Create.or.Manage.Service.Account.Key": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_permissions_granted_to_create_or_manage_service_account_key.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_permissions_granted_to_create_or_manage_service_account_key.yml"
      ]
    ],
    "GCP.Cloud.Run.Set.IAM.Policy": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloud_run_set_iam_policy.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloud_run_set_iam_policy.yml"
      ]
    ],
    "GCP.UnusedRegions": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_unused_regions.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_unused_regions.yml"
      ]
    ],
    "GCP.Cloudfunctions.Functions.Update": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloudfunctions_functions_update.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloudfunctions_functions_update.yml"
      ]
    ],
    "GCP.Cloud.Storage.Buckets.Modified.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloud_storage_buckets_modified_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloud_storage_buckets_modified_or_deleted.yml"
      ]
    ],
    "GCP.Compute.Snapshot.UnexpectedDomain": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_snapshot_insert.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_snapshot_insert.yml"
      ]
    ],
    "GCP.Compute.IAM.Policy.Update": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_compute_set_iam_policy.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_compute_set_iam_policy.yml"
      ]
    ],
    "GCP.IAM.serviceAccounts.signBlob": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_service_accounts_sign_blob.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_service_accounts_sign_blob.yml"
      ]
    ],
    "GCP.Tag.Binding.Creation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_tag_binding_creation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_tag_binding_creation.yml"
      ]
    ],
    "GCP.Storage.Hmac.Keys.Create": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_storage_hmac_keys_create.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_storage_hmac_keys_create.yml"
      ]
    ],
    "GCP.Cloudfunctions.Functions.Create": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloudfunctions_functions_create.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloudfunctions_functions_create.yml"
      ]
    ],
    "GCP.IAM.CustomRoleChanges": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_custom_role_changes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_custom_role_changes.yml"
      ]
    ],
    "GCP.IAM.Tag.Enumeration": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_tag_enumeration.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_tag_enumeration.yml"
      ]
    ],
    "GCP.compute.instances.create.Privilege.Escalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_computeinstances_create_privilege_escalation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_computeinstances_create_privilege_escalation.yml"
      ]
    ],
    "GCP.Privileged.Operation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_privileged_operation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_privileged_operation.yml"
      ]
    ],
    "GCP.Access.Attempts.Violating.VPC.Service.Controls": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_access_attempts_violating_vpc_service_controls.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_access_attempts_violating_vpc_service_controls.yml"
      ]
    ],
    "GCP.BigQuery.Large.Scan": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_bigquery_large_scan.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_bigquery_large_scan.yml"
      ]
    ],
    "GCP.Cloud.Run.Service.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloud_run_service_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloud_run_service_created.yml"
      ]
    ],
    "GCP.User.Added.To.Privileged.Group": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_user_added_to_privileged_group.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_user_added_to_privileged_group.yml"
      ]
    ],
    "GCP.Firewall.Rule.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_firewall_rule_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_firewall_rule_created.yml"
      ]
    ],
    "GCP.User.Added.to.IAP.Protected.Service": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_user_added_to_iap_protected_service.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_user_added_to_iap_protected_service.yml"
      ]
    ],
    "GCP.Logging.Sink.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_logging_sink_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_logging_sink_modified.yml"
      ]
    ],
    "GCP.Privilege.Escalation.By.Deployments.Create": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_privilege_escalation_by_deployments_create.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_privilege_escalation_by_deployments_create.yml"
      ]
    ],
    "GCP.Destructive.Queries": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_destructive_queries.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_destructive_queries.yml"
      ]
    ],
    "GCP.iam.roles.update.Privilege.Escalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_roles_update_privilege_escalation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_roles_update_privilege_escalation.yml"
      ]
    ],
    "GCP.SQL.ConfigChanges": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_sql_config_changes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_sql_config_changes.yml"
      ]
    ],
    "GCP.Service.Account.Access.Denied": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_service_account_access_denied.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_service_account_access_denied.yml"
      ]
    ],
    "GCP.Compute.SSHConnection": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_compute_ssh_connection.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_compute_ssh_connection.yml"
      ]
    ],
    "GCP.CloudBuild.Potential.Privilege.Escalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloudbuild_potential_privilege_escalation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_cloudbuild_potential_privilege_escalation.yml"
      ]
    ],
    "GCP.IAM.serviceAccounts.signJwt.Privilege.Escalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_serviceaccounts_signjwt.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_serviceaccounts_signjwt.yml"
      ]
    ],
    "GCP.GCS.IAMChanges": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_gcs_iam_changes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_gcs_iam_changes.yml"
      ]
    ],
    "GCP.IAM.CorporateEmail": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_corp_email.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_corp_email.yml"
      ]
    ],
    "GCP.serviceusage.apiKeys.create.Privilege.Escalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_serviceusage_apikeys_create_privilege_escalation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_serviceusage_apikeys_create_privilege_escalation.yml"
      ]
    ],
    "GCP.Workload.Identity.Pool.Created.or.Updated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_workload_identity_pool_created_or_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_workload_identity_pool_created_or_updated.yml"
      ]
    ],
    "GCP.Service.Account.or.Keys.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_service_account_or_keys_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_service_account_or_keys_created.yml"
      ]
    ],
    "GCP.VPC.Flow.Logs.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_vpc_flow_logs_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_vpc_flow_logs_disabled.yml"
      ]
    ],
    "GCP.IAM.OrgFolderIAMChanges": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_org_folder_changes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_org_folder_changes.yml"
      ]
    ],
    "GCP.Workforce.Pool.Created.or.Updated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_workforce_pool_created_or_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_workforce_pool_created_or_updated.yml"
      ]
    ],
    "GCP.Logging.Settings.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_logging_settings_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_logging_settings_modified.yml"
      ]
    ],
    "GCP.Firewall.Rule.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_firewall_rule_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_firewall_rule_deleted.yml"
      ]
    ],
    "GCP.Firewall.Rule.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_firewall_rule_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_firewall_rule_modified.yml"
      ]
    ],
    "GCP.IAM.serviceAccounts.getAccessToken.Privilege.Escalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_service_accounts_get_access_token_privilege_escalation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_iam_service_accounts_get_access_token_privilege_escalation.yml"
      ]
    ],
    "GCP.Log.Bucket.Or.Sink.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_log_bucket_or_sink_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_audit_rules/gcp_log_bucket_or_sink_deleted.yml"
      ]
    ],
    "Notion.LoginFromBlockedIP": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_login_from_blocked_ip.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_login_from_blocked_ip.yml"
      ]
    ],
    "Notion.LoginFromNewLocation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_login_from_new_location.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_login_from_new_location.yml"
      ]
    ],
    "Notion.AccountChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_account_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_account_changed.yml"
      ]
    ],
    "Notion.SAML.SSO.Configuration.Changed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_settings_enforce_saml_sso_config_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_settings_enforce_saml_sso_config_updated.yml"
      ]
    ],
    "Notion.Workspace.Public.Page.Added": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_settings_public_homepage_added.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_settings_public_homepage_added.yml"
      ]
    ],
    "Notion.PagePerms.APIPermsChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_page_accessible_to_api.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_page_accessible_to_api.yml"
      ]
    ],
    "Notion.Workspace.SCIM.Token.Generated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_scim_token_generated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_scim_token_generated.yml"
      ]
    ],
    "Notion.SharingSettingsUpdated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_sharing_settings_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_sharing_settings_updated.yml"
      ]
    ],
    "Notion.TeamspaceOwnerAdded": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_teamspace_owner_added.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_teamspace_owner_added.yml"
      ]
    ],
    "Notion.PagePerms.GuestPermsChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_page_accessible_to_guests.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_page_accessible_to_guests.yml"
      ]
    ],
    "Notion.Workspace.Exported": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_exported.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_exported.yml"
      ]
    ],
    "Notion.Many.Pages.Exported": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_many_pages_exported.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_many_pages_exported.yml"
      ]
    ],
    "Notion.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_login.yml"
      ]
    ],
    "Notion.PageSharedToWeb": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_page_shared_to_web.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_page_shared_to_web.yml"
      ]
    ],
    "Notion.Audit.Log.Exported": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_audit_log_exported.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_workspace_audit_log_exported.yml"
      ]
    ],
    "Notion.Many.Pages.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_many_pages_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/notion_rules/notion_many_pages_deleted.yml"
      ]
    ],
    "Tailscale.Machine.Approval.Requirements.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tailscale_rules/tailscale_machine_approval_requirements_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tailscale_rules/tailscale_machine_approval_requirements_disabled.yml"
      ]
    ],
    "Tailscale.Magic.DNS.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tailscale_rules/tailscale_magicdns_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tailscale_rules/tailscale_magicdns_disabled.yml"
      ]
    ],
    "Tailscale.HTTPS.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tailscale_rules/tailscale_https_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tailscale_rules/tailscale_https_disabled.yml"
      ]
    ],
    "GSuite.Drive.ExternalFileShare": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_reports_rules/gsuite_drive_external_share.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_reports_rules/gsuite_drive_external_share.yml"
      ]
    ],
    "GSuite.DriveOverlyVisible": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_reports_rules/gsuite_drive_overly_visible.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_reports_rules/gsuite_drive_overly_visible.yml"
      ]
    ],
    "GSuite.DriveVisibilityChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_reports_rules/gsuite_drive_visibility_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_reports_rules/gsuite_drive_visibility_change.yml"
      ]
    ],
    "Cloudflare.Firewall.L7DDoS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cloudflare_rules/cloudflare_firewall_ddos.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cloudflare_rules/cloudflare_firewall_ddos.yml"
      ]
    ],
    "Cloudflare.HttpRequest.BotHighVolume": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cloudflare_rules/cloudflare_httpreq_bot_high_volume.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cloudflare_rules/cloudflare_httpreq_bot_high_volume.yml"
      ]
    ],
    "Standard.NewUserAccountCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/indicator_creation_rules/new_user_account_logging.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/indicator_creation_rules/new_user_account_logging.yml"
      ]
    ],
    "Standard.NewAWSAccountCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/indicator_creation_rules/new_aws_account_logging.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/indicator_creation_rules/new_aws_account_logging.yml"
      ]
    ],
    "Dropbox.External.Share": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_external_share.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_external_share.yml"
      ]
    ],
    "Dropbox.Admin.sign.in.as.Session": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_admin_sign_in_as_session.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_admin_sign_in_as_session.yml"
      ]
    ],
    "Dropbox.User.Disabled.2FA": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_user_disabled_2fa.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_user_disabled_2fa.yml"
      ]
    ],
    "Dropbox.Linked.Team.Application.Added": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_linked_team_application_added.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_linked_team_application_added.yml"
      ]
    ],
    "Dropbox.Ownership.Transfer": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_ownership_transfer.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/dropbox_rules/dropbox_ownership_transfer.yml"
      ]
    ],
    "GSuite.SuspiciousLogins": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_suspicious_logins.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_suspicious_logins.yml"
      ]
    ],
    "GSuite.DeviceUnlockFailure": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_mobile_device_screen_unlock_fail.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_mobile_device_screen_unlock_fail.yml"
      ]
    ],
    "GSuite.Workspace.GmailDefaultRoutingRuleModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_gmail_default_routing_rule.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_gmail_default_routing_rule.yml"
      ]
    ],
    "Google.Workspace.Apps.New.Mobile.App.Installed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_apps_new_mobile_app_installed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_apps_new_mobile_app_installed.yml"
      ]
    ],
    "GSuite.GovernmentBackedAttack": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_gov_attack.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_gov_attack.yml"
      ]
    ],
    "Google.Workspace.Admin.Custom.Role": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_admin_custom_role.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_admin_custom_role.yml"
      ]
    ],
    "GSuite.DocOwnershipTransfer": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_doc_ownership_transfer.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_doc_ownership_transfer.yml"
      ]
    ],
    "GSuite.Workspace.PasswordEnforceStrongDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_password_enforce_strong_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_password_enforce_strong_disabled.yml"
      ]
    ],
    "GSuite.GoogleAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_google_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_google_access.yml"
      ]
    ],
    "GSuite.Rule": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_passthrough_rule.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_passthrough_rule.yml"
      ]
    ],
    "GSuite.GroupBannedUser": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_group_banned_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_group_banned_user.yml"
      ]
    ],
    "Google.Workspace.Apps.Marketplace.Allowlist": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_apps_marketplace_allowlist.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_apps_marketplace_allowlist.yml"
      ]
    ],
    "Google.Workspace.ManyDocsDownloaded": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_many_docs_downloaded.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_many_docs_downloaded.yml"
      ]
    ],
    "GSuite.DeviceSuspiciousActivity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_mobile_device_suspicious_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_mobile_device_suspicious_activity.yml"
      ]
    ],
    "GSuite.ExternalMailForwarding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_external_forwarding.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_external_forwarding.yml"
      ]
    ],
    "GSuite.LoginType": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_login_type.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_login_type.yml"
      ]
    ],
    "GSuite.CalendarMadePublic": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_calendar_made_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_calendar_made_public.yml"
      ]
    ],
    "Google.Workspace.Advanced.Protection.Program": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_advanced_protection_program.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_advanced_protection_program.yml"
      ]
    ],
    "GSuite.UserSuspended": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_user_suspended.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_user_suspended.yml"
      ]
    ],
    "GSuite.AdvancedProtection": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_advanced_protection.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_advanced_protection.yml"
      ]
    ],
    "GSuite.Workspace.PasswordReuseEnabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_password_reuse_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_password_reuse_enabled.yml"
      ]
    ],
    "GSuite.Workspace.TrustedDomainsAllowlist": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_trusted_domains_allowlist.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_trusted_domains_allowlist.yml"
      ]
    ],
    "GSuite.Workspace.GmailSecuritySandboxDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_gmail_security_sandbox_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_gmail_security_sandbox_disabled.yml"
      ]
    ],
    "GSuite.Workspace.DataExportCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_data_export_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_data_export_created.yml"
      ]
    ],
    "GSuite.IsSuspiciousTag": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_is_suspicious_tag.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_is_suspicious_tag.yml"
      ]
    ],
    "GSuite.TwoStepVerification": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_two_step_verification.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_two_step_verification.yml"
      ]
    ],
    "GSuite.LeakedPassword": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_leaked_password.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_leaked_password.yml"
      ]
    ],
    "GSuite.Workspace.CalendarExternalSharingSetting": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_calendar_external_sharing.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_calendar_external_sharing.yml"
      ]
    ],
    "GSuite.Workspace.GmailPredeliveryScanningDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_gmail_enhanced_predelivery_scanning.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_workspace_gmail_enhanced_predelivery_scanning.yml"
      ]
    ],
    "GSuite.DeviceCompromise": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_mobile_device_compromise.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/gsuite_mobile_device_compromise.yml"
      ]
    ],
    "Google.Workspace.Apps.Marketplace.New.Domain.Application": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_apps_marketplace_new_domain_application.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gsuite_activityevent_rules/google_workspace_apps_marketplace_new_domain_application.yml"
      ]
    ],
    "Wiz.Update.IP.Restrictions": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_ip_restrictions.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_ip_restrictions.yml"
      ]
    ],
    "Wiz.Rotate.Service.Account.Secret": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_rotate_service_account_secret.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_rotate_service_account_secret.yml"
      ]
    ],
    "Wiz.Update.Support.Contact.List": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_support_contact_list.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_support_contact_list.yml"
      ]
    ],
    "Wiz.Rule.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_rule_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_rule_change.yml"
      ]
    ],
    "Wiz.CICD.Scan.Policy.Updated.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_cicd_scan_policy_updated_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_cicd_scan_policy_updated_or_deleted.yml"
      ]
    ],
    "Wiz.Revoke.User.Sessions": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_revoke_user_sessions.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_revoke_user_sessions.yml"
      ]
    ],
    "Wiz.Update.Login.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_login_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_login_settings.yml"
      ]
    ],
    "Wiz.Update.Scanner.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_scanner_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_update_scanner_settings.yml"
      ]
    ],
    "Wiz.Image.Integrity.Validator.Updated.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_image_integrity_validator_updated_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_image_integrity_validator_updated_or_deleted.yml"
      ]
    ],
    "Wiz.Connector.Updated.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_connector_updated_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_connector_updated_or_deleted.yml"
      ]
    ],
    "Wiz.SAML.Identity.Provider.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_saml_identity_provider_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_saml_identity_provider_change.yml"
      ]
    ],
    "Wiz.Alert.Passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_alert_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_alert_passthrough.yml"
      ]
    ],
    "Wiz.Data.Classifier.Updated.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_data_classifier_updated_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_data_classifier_updated_or_deleted.yml"
      ]
    ],
    "Wiz.User.Created.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_user_created_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_user_created_or_deleted.yml"
      ]
    ],
    "Wiz.User.Role.Updated.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_user_role_updated_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_user_role_updated_or_deleted.yml"
      ]
    ],
    "Wiz.Integration.Updated.Or.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_integration_updated_or_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_integration_updated_or_deleted.yml"
      ]
    ],
    "Wiz.Service.Account.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_service_account_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/wiz_rules/wiz_service_account_change.yml"
      ]
    ],
    "Salesforce.Admin.Login.As.User": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/salesforce_rules/salesforce_admin_login_as_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/salesforce_rules/salesforce_admin_login_as_user.yml"
      ]
    ],
    "AWS.GuardDuty.CriticalSeverityFinding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_critical_sev_findings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_critical_sev_findings.yml"
      ]
    ],
    "AWS.GuardDuty.MediumSeverityFinding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_med_sev_findings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_med_sev_findings.yml"
      ]
    ],
    "AWS.GuardDuty.HighSeverityFinding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_high_sev_findings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_high_sev_findings.yml"
      ]
    ],
    "AWS.GuardDuty.LowSeverityFinding": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_low_sev_findings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_guardduty_rules/aws_guardduty_low_sev_findings.yml"
      ]
    ],
    "AWS.BedrockModelInvocation.AbnormalTokenUsage": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_bedrockmodelinvocation_rules/aws_bedrockmodelinvocation_abnormaltokenusage.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_bedrockmodelinvocation_rules/aws_bedrockmodelinvocation_abnormaltokenusage.yml"
      ]
    ],
    "AWS.BedrockModelInvocation.GuardRailIntervened": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_bedrockmodelinvocation_rules/aws_bedrockmodelinvocation_guardrailintervened.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_bedrockmodelinvocation_rules/aws_bedrockmodelinvocation_guardrailintervened.yml"
      ]
    ],
    "Snowflake.Stream.FileDownloaded": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_file_downloaded.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_file_downloaded.yml"
      ]
    ],
    "Snowflake.Stream.PublicRoleGrant": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_public_role_grant.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_public_role_grant.yml"
      ]
    ],
    "Snowflake.Stream.BruteForceByUsername": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_brute_force_by_username.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_brute_force_by_username.yml"
      ]
    ],
    "Snowflake.Stream.LoginWithoutMFA": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_login_without_mfa.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_login_without_mfa.yml"
      ]
    ],
    "Snowflake.Stream.UserCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_user_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_user_created.yml"
      ]
    ],
    "Snowflake.Stream.TableCopiedIntoStage": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_table_copied_into_stage.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_table_copied_into_stage.yml"
      ]
    ],
    "Snowflake.Stream.AccountAdminGranted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_account_admin_assigned.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_account_admin_assigned.yml"
      ]
    ],
    "Snowflake.Stream.TempStageCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_temp_stage_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_temp_stage_created.yml"
      ]
    ],
    "Snowflake.Stream.LoginSuccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_login_success.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_login_success.yml"
      ]
    ],
    "Snowflake.Stream.ExternalShares": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_external_shares.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_external_shares.yml"
      ]
    ],
    "Snowflake.Stream.UserEnabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_user_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_user_enabled.yml"
      ]
    ],
    "Snowflake.Stream.BruteForceByIp": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_brute_force_by_ip.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snowflake_rules/snowflake_stream_brute_force_by_ip.yml"
      ]
    ],
    "AWS.RDS.MasterPasswordUpdated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_master_pass_updated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_master_pass_updated.yml"
      ]
    ],
    "AWS.CloudTrail.AMIModifiedForPublicAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ami_modified_for_public_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ami_modified_for_public_access.yml"
      ]
    ],
    "AWS.Console.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_login.yml"
      ]
    ],
    "AWS.RDS.ManualSnapshotCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_manual_snapshot_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_manual_snapshot_created.yml"
      ]
    ],
    "AWS.UnusedRegion": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_unused_region.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_unused_region.yml"
      ]
    ],
    "AWS.EC2.RouteTableModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_route_table_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_route_table_modified.yml"
      ]
    ],
    "AWS.EC2.Vulnerable.XZ.Image.Launched": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_vulnerable_xz_image_launched.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_vulnerable_xz_image_launched.yml"
      ]
    ],
    "AWS.CloudTrail.SES.CheckIdentityVerifications": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_check_identity_verifications.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_check_identity_verifications.yml"
      ]
    ],
    "AWS.SecretsManager.BatchRetrieveSecrets": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets_batch.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets_batch.yml"
      ]
    ],
    "AWS.SecretsManager.RetrieveSecretsMultiRegion": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets_multiregion.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets_multiregion.yml"
      ]
    ],
    "AWS.S3.BucketPolicyModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_bucket_policy_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_bucket_policy_modified.yml"
      ]
    ],
    "AWS.EC2.GatewayModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_gateway_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_gateway_modified.yml"
      ]
    ],
    "AWS.CloudTrail.Account.Discovery": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_account_discovery.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_account_discovery.yml"
      ]
    ],
    "AWS.Macie.Evasion": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_macie_evasion.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_macie_evasion.yml"
      ]
    ],
    "AWS.IAM.AttachAdminRolePolicy": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_attach_admin_role_policy.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_attach_admin_role_policy.yml"
      ]
    ],
    "Role.Assumed.by.User": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/role_assumed_by_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/role_assumed_by_user.yml"
      ]
    ],
    "AWS.CloudTrail.IAMCompromisedKeyQuarantine": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_compromised_key_quarantine.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_compromised_key_quarantine.yml"
      ]
    ],
    "AWS.IAM.BackdoorRole": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_backdoor_role.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_backdoor_role.yml"
      ]
    ],
    "AWS.CloudTrail.CodebuildProjectMadePublic": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_codebuild_made_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_codebuild_made_public.yml"
      ]
    ],
    "AWS.Potential.Backdoor.Lambda": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_backdoor_lambda_function.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_backdoor_lambda_function.yml"
      ]
    ],
    "AWS.IAM.Group.Read.Only.Events": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_group_read_only_events.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_group_read_only_events.yml"
      ]
    ],
    "AWS.Lambda.UpdateFunctionConfiguration": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_add_malicious_lambda_extension.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_add_malicious_lambda_extension.yml"
      ]
    ],
    "Retrieve.SSO.access.token": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/retrieve_sso_access_token.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/retrieve_sso_access_token.yml"
      ]
    ],
    "AWS.S3.DeleteObjects": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_delete_objects.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_delete_objects.yml"
      ]
    ],
    "AWS.CloudTrail.SES.CheckSESSendingEnabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_check_ses_sending_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_check_ses_sending_enabled.yml"
      ]
    ],
    "AWS.S3.DeleteObject": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_delete_object.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_delete_object.yml"
      ]
    ],
    "AWS.ConfigService.DisabledDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_config_service_disabled_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_config_service_disabled_deleted.yml"
      ]
    ],
    "AWS.CloudTrail.IAMAnythingChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_anything_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_anything_changed.yml"
      ]
    ],
    "AWS.CloudTrail.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_created.yml"
      ]
    ],
    "AWS.Console.RootLoginFailed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_root_login_failed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_root_login_failed.yml"
      ]
    ],
    "AWS.EC2.MultiInstanceConnect": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_multi_instance_connect.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_multi_instance_connect.yml"
      ]
    ],
    "AWS.CloudTrail.IAMAssumeRoleBlacklistIgnored": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_assume_role_blocklist_ignored.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_assume_role_blocklist_ignored.yml"
      ]
    ],
    "AWS.KMS.CustomerManagedKeyLoss": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_kms_cmk_loss.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_kms_cmk_loss.yml"
      ]
    ],
    "AWS.CloudTrail.Password.Policy.Discovery": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_password_policy_discovery.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_password_policy_discovery.yml"
      ]
    ],
    "AWS.Console.LoginWithoutMFA": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_login_without_mfa.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_login_without_mfa.yml"
      ]
    ],
    "AWS.CloudTrail.Stopped": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_stopped.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_stopped.yml"
      ]
    ],
    "AWS.CloudTrail.IAMEntityCreatedWithoutCloudFormation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_entity_created_without_cloudformation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_entity_created_without_cloudformation.yml"
      ]
    ],
    "AWS.EC2.ManyPasswordReadAttempts": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_many_passwors_read_attempts.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_many_passwors_read_attempts.yml"
      ]
    ],
    "AWS.CloudTrail.EventSelectorsDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_event_selectors_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_event_selectors_disabled.yml"
      ]
    ],
    "AWS.CloudTrail.SecurityConfigurationChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_security_configuration_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_security_configuration_change.yml"
      ]
    ],
    "AWS.Console.RootLogin": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_root_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_root_login.yml"
      ]
    ],
    "AWS.EC2.Traffic.Mirroring": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_traffic_mirroring.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_traffic_mirroring.yml"
      ]
    ],
    "AWS.IAM.AttachAdminUserPolicy": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_attach_admin_user_policy.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_attach_admin_user_policy.yml"
      ]
    ],
    "AWS.IAM.PolicyModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_policy_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_policy_modified.yml"
      ]
    ],
    "AWS.CloudTrail.DNSLogsDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_dns_logs_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_dns_logs_deleted.yml"
      ]
    ],
    "AWS.Suspicious.SAML.Activity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_saml_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_saml_activity.yml"
      ]
    ],
    "AWS.IAM.Backdoor.User.Keys": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_user_key_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_user_key_created.yml"
      ]
    ],
    "AWS.CloudTrail.LoginProfileCreatedOrModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_loginprofilecreatedormodified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_loginprofilecreatedormodified.yml"
      ]
    ],
    "AWS.IPSet.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ipset_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ipset_modified.yml"
      ]
    ],
    "AWS.CloudTrail.ShortLifecycle": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_short_lifecycle.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_short_lifecycle.yml"
      ]
    ],
    "AWS.CloudTrail.VPCE.AccessDenied": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_access_denied.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_access_denied.yml"
      ]
    ],
    "AWS.SecretsManager.RetrieveSecrets": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets.yml"
      ]
    ],
    "AWS.RDS.PublicRestore": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_publicrestore.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_publicrestore.yml"
      ]
    ],
    "AWS.EC2.Startup.Script.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_startup_script_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_startup_script_change.yml"
      ]
    ],
    "AWS.Bedrock.DeleteModelInvocationLoggingConfiguration": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_bedrock_deletemodelinvocationloggingconfiguration.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_bedrock_deletemodelinvocationloggingconfiguration.yml"
      ]
    ],
    "Sign-in.with.AWS.CLI.prompt": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/signin_with_aws_cli_prompt.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/signin_with_aws_cli_prompt.yml"
      ]
    ],
    "AWS.SSM.DecryptSSMParams": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ssm_decrypt_ssm_params.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ssm_decrypt_ssm_params.yml"
      ]
    ],
    "AWS.CloudTrail.EnableRegion": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_region_enabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_region_enabled.yml"
      ]
    ],
    "AWS.WAF.Disassociation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_waf_disassociation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_waf_disassociation.yml"
      ]
    ],
    "AWS.EC2.EBS.Encryption.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_ebs_encryption_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_ebs_encryption_disabled.yml"
      ]
    ],
    "AWS.CloudTrail.RootPasswordChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_root_password_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_root_password_changed.yml"
      ]
    ],
    "AWS.IAM.CreateRole": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_create_role.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_create_role.yml"
      ]
    ],
    "AWS.IAM.CreateUser": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_create_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_create_user.yml"
      ]
    ],
    "AWS.ConfigService.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_config_service_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_config_service_created.yml"
      ]
    ],
    "AWS.CloudTrail.UserAccessKeyAuth": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_useraccesskeyauth.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_useraccesskeyauth.yml"
      ]
    ],
    "AWS.Lambda.UpdateFunctionCode": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_overwrite_lambda_code.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_overwrite_lambda_code.yml"
      ]
    ],
    "AWS.EC2.NetworkACLModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_network_acl_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_network_acl_modified.yml"
      ]
    ],
    "AWS.EC2.DownloadInstanceUserData": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_download_instance_user_data.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_download_instance_user_data.yml"
      ]
    ],
    "AWS.VPCFlow.LogsDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpc_flow_logs_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpc_flow_logs_deleted.yml"
      ]
    ],
    "AWS.CloudTrail.SES.CheckSendQuota": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_check_send_quota.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_check_send_quota.yml"
      ]
    ],
    "Role.Assumed.by.AWS.Service": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/role_assumed_by_aws_service.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/role_assumed_by_aws_service.yml"
      ]
    ],
    "AWS.IAM.AccessKeyCompromised": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_key_compromised.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_key_compromised.yml"
      ]
    ],
    "AWS.CloudTrail.NetworkACLPermissiveEntry": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_network_acl_permissive_entry.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_network_acl_permissive_entry.yml"
      ]
    ],
    "AWS.ECR.CRUD": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ecr_crud.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ecr_crud.yml"
      ]
    ],
    "AWS.Software.Discovery": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_software_discovery.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_software_discovery.yml"
      ]
    ],
    "AWS.EC2.ManualSecurityGroupChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_manual_security_group_changes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_manual_security_group_changes.yml"
      ]
    ],
    "AWS.SecretsManager.BatchRetrieveSecretsCatchAll": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets_catchall.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_secretsmanager_retrieve_secrets_catchall.yml"
      ]
    ],
    "AWS.Unsuccessful.MFA.attempt": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_unsuccessful_mfa_attempt.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_unsuccessful_mfa_attempt.yml"
      ]
    ],
    "AWS.Console.LoginWithoutSAML": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_login_without_saml.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_login_without_saml.yml"
      ]
    ],
    "AWS.IAMUser.ReconAccessDenied": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_user_recon_denied.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_iam_user_recon_denied.yml"
      ]
    ],
    "AWS.EC2.StopInstances": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_stopinstances.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_stopinstances.yml"
      ]
    ],
    "AWS.CloudTrail.SnapshotMadePublic": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_snapshot_made_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_snapshot_made_public.yml"
      ]
    ],
    "AWS.CloudTrail.RootAccessKeyCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_root_access_key_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_root_access_key_created.yml"
      ]
    ],
    "AWS.EC2.Monitoring": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_monitoring.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_monitoring.yml"
      ]
    ],
    "AWS.S3.CopyObjectWithClientSideEncryption": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_copy_object_with_client_side_encryption.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_copy_object_with_client_side_encryption.yml"
      ]
    ],
    "AWS.Console.Sign-In": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_signin.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_console_signin.yml"
      ]
    ],
    "AWS.SecurityHub.Finding.Evasion": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_securityhub_finding_evasion.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_securityhub_finding_evasion.yml"
      ]
    ],
    "AWS.CloudTrail.SES.ListIdentities": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_list_identities.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_ses_list_identities.yml"
      ]
    ],
    "AWS.EC2.SecurityGroupModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_security_group_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_security_group_modified.yml"
      ]
    ],
    "AWS.EC2.VPCModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_vpc_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_vpc_modified.yml"
      ]
    ],
    "AWS.Bedrock.GuardrailUpdateDelete": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_bedrock_guardrail_update_delete.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_bedrock_guardrail_update_delete.yml"
      ]
    ],
    "AWS.CloudTrail.AttemptToLeaveOrg": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_attempt_to_leave_org.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_cloudtrail_attempt_to_leave_org.yml"
      ]
    ],
    "AWS.CloudTrail.VPCE.SensitiveAPICalls": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_sensitive_api_calls.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_sensitive_api_calls.yml"
      ]
    ],
    "AWS.CloudTrail.VPCE.S3ExternalIP": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_s3_external_ip.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_s3_external_ip.yml"
      ]
    ],
    "AWS.S3.BucketDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_bucket_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_s3_bucket_deleted.yml"
      ]
    ],
    "AWS.ECR.EVENTS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ecr_events.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ecr_events.yml"
      ]
    ],
    "AWS.User.Login.Profile.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_user_login_profile_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_user_login_profile_modified.yml"
      ]
    ],
    "AWS.RDS.SnapshotShared": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_snapshot_shared.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_rds_snapshot_shared.yml"
      ]
    ],
    "AWS.Modify.Cloud.Compute.Infrastructure": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_modify_cloud_compute_infrastructure.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_modify_cloud_compute_infrastructure.yml"
      ]
    ],
    "AWS.CloudTrail.UnauthorizedAPICall": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_unauthorized_api_call.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_unauthorized_api_call.yml"
      ]
    ],
    "AWS.CloudTrail.VPCE.ExternalPrincipal": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_external_principal.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_vpce_external_principal.yml"
      ]
    ],
    "AWS.IAM.CredentialsUpdated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_update_credentials.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_update_credentials.yml"
      ]
    ],
    "AWS.Root.Activity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_root_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_root_activity.yml"
      ]
    ],
    "AWS.EC2.LaunchUnusualEC2Instances": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_launch_unusual_ec2_instances.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ec2_launch_unusual_ec2_instances.yml"
      ]
    ],
    "AWS.SSM.DistributedCommand": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ssm_distributed_command.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_ssm_distributed_command.yml"
      ]
    ],
    "AWS.CloudTrail.ResourceMadePublic": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_resource_made_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_resource_made_public.yml"
      ]
    ],
    "AWS.LAMBDA.CRUD": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_lambda_crud.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_cloudtrail_rules/aws_lambda_crud.yml"
      ]
    ],
    "Orca.Passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/orca_rules/orca_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/orca_rules/orca_passthrough.yml"
      ]
    ],
    "Crowdstrike.Macos.Osascript.Administrator": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_macos_osascript_administrator.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_macos_osascript_administrator.yml"
      ]
    ],
    "Crowdstrike.RealTimeResponse.Session": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_real_time_response_session.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_real_time_response_session.yml"
      ]
    ],
    "Crowdstrike.Macos.Plutil.Usage": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_macos_plutil_usage.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_macos_plutil_usage.yml"
      ]
    ],
    "Crowdstrike.Macos.Add.Trusted.Cert": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_macos_add_trusted_cert.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_macos_add_trusted_cert.yml"
      ]
    ],
    "Connection.to.Embargoed.Country": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_connection_to_embargoed_country.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_connection_to_embargoed_country.yml"
      ]
    ],
    "Crowdstrike.Detection.passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_detection_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_detection_passthrough.yml"
      ]
    ],
    "Crowdstrike.Unusual.Parent.Child.Processes": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_unusual_parent_child_processes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_unusual_parent_child_processes.yml"
      ]
    ],
    "Crowdstrike.Remote.Access.Tool.Execution": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_remote_access_tool_execution.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_remote_access_tool_execution.yml"
      ]
    ],
    "Crowdstrike.Reverse.Shell.Tool.Executed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_reverse_shell_tool_executed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_reverse_shell_tool_executed.yml"
      ]
    ],
    "Crowdstrike.Credential.Dumping.Tool": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_credential_dumping_tool.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_credential_dumping_tool.yml"
      ]
    ],
    "Crowdstrike.Cryptomining.Tools": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_cryptomining_tools.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_cryptomining_tools.yml"
      ]
    ],
    "Crowdstrike.FDR.LOLBAS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_lolbas.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_lolbas.yml"
      ]
    ],
    "Crowdstrike.Systemlog.Tampering": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_systemlog_tampering.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_systemlog_tampering.yml"
      ]
    ],
    "Crowdstrike.WMI.Query.Detection": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_wmi_query_detection.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_wmi_query_detection.yml"
      ]
    ],
    "Crowdstrike.DNS.Request": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_dns_request.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_dns_request.yml"
      ]
    ],
    "Crowdstrike.Base64EncodedArgs": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_base64_encoded_args.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/crowdstrike_base64_encoded_args.yml"
      ]
    ],
    "Crowdstrike.UserDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_user_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_user_deleted.yml"
      ]
    ],
    "Crowdstrike.API.Key.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_api_key_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_api_key_created.yml"
      ]
    ],
    "Crowdstrike.AllowlistRemoved": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_allowlist_removed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_allowlist_removed.yml"
      ]
    ],
    "Crowdstrike.AdminRoleAssigned": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_admin_role_assigned.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_admin_role_assigned.yml"
      ]
    ],
    "Crowdstrike.SingleIpAllowlisted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_single_ip_allowlisted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_single_ip_allowlisted.yml"
      ]
    ],
    "Crowdstrike.NewUserCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_new_user_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_new_user_created.yml"
      ]
    ],
    "Crowdstrike.API.Key.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_api_key_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_api_key_deleted.yml"
      ]
    ],
    "Crowdstrike.EppDetectionSummary": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_detection_summary.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_detection_summary.yml"
      ]
    ],
    "Crowdstrike.UserPasswordChange": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_password_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_password_change.yml"
      ]
    ],
    "Crowdstrike.IpAllowlistChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_ip_allowlist_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/crowdstrike_rules/event_stream_rules/crowdstrike_ip_allowlist_changed.yml"
      ]
    ],
    "Azure.Audit.MFADisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_mfa_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_mfa_disabled.yml"
      ]
    ],
    "Azure.Audit.RoleChangedPIM": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_role_changed_pim.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_role_changed_pim.yml"
      ]
    ],
    "Azure.Audit.RiskLevelPassthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_risklevel_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_risklevel_passthrough.yml"
      ]
    ],
    "Azure.Audit.ManyFailedSignIns": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_failed_signins.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_failed_signins.yml"
      ]
    ],
    "Azure.Audit.LegacyAuth": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_legacyauth.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_legacyauth.yml"
      ]
    ],
    "Azure.Audit.PolicyChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_policy_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_policy_changed.yml"
      ]
    ],
    "Azure.Audit.InviteExternalUsers": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_invite_external_users.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/azure_signin_rules/azure_invite_external_users.yml"
      ]
    ],
    "AWS.S3.ServerAccess.Unauthenticated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_unauthenticated_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_unauthenticated_access.yml"
      ]
    ],
    "AWS.S3.ServerAccess.Error": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_access_error.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_access_error.yml"
      ]
    ],
    "AWS.S3.ServerAccess.IPWhitelist": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_access_ip_allowlist.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_access_ip_allowlist.yml"
      ]
    ],
    "AWS.S3.ServerAccess.UnknownRequester": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_unknown_requester_get_object.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_unknown_requester_get_object.yml"
      ]
    ],
    "AWS.S3.ServerAccess.Insecure": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_insecure_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_s3_rules/aws_s3_insecure_access.yml"
      ]
    ],
    "AppOmni.Alert.Passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/appomni_rules/appomni_alert_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/appomni_rules/appomni_alert_passthrough.yml"
      ]
    ],
    "AWS.VPC.InboundPortWhitelist": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_inbound_traffic_port_allowlist.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_inbound_traffic_port_allowlist.yml"
      ]
    ],
    "AWS.VPC.UnapprovedOutboundDNS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_unapproved_outbound_dns.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_unapproved_outbound_dns.yml"
      ]
    ],
    "AWS.VPC.InboundPortBlacklist": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_inbound_traffic_port_blocklist.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_inbound_traffic_port_blocklist.yml"
      ]
    ],
    "AWS.VPC.HealthyLogStatus": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_healthy_log_status.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_healthy_log_status.yml"
      ]
    ],
    "AWS.VPC.SSHAllowedSignal": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_ssh_allowed_signal.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_vpc_ssh_allowed_signal.yml"
      ]
    ],
    "AWS.DNS.Crypto.Domain": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_dns_crypto_domain.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/aws_vpc_flow_rules/aws_dns_crypto_domain.yml"
      ]
    ],
    "CiscoUmbrella.DNS.Suspicious": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cisco_umbrella_dns_rules/suspicious_domains.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cisco_umbrella_dns_rules/suspicious_domains.yml"
      ]
    ],
    "CiscoUmbrella.DNS.FuzzyMatching": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cisco_umbrella_dns_rules/fuzzy_matching_domains.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cisco_umbrella_dns_rules/fuzzy_matching_domains.yml"
      ]
    ],
    "CiscoUmbrella.DNS.Blocked": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cisco_umbrella_dns_rules/domain_blocked.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/cisco_umbrella_dns_rules/domain_blocked.yml"
      ]
    ],
    "CarbonBlack.Audit.Data.Forwarder.Stopped": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_data_forwarder_stopped.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_data_forwarder_stopped.yml"
      ]
    ],
    "CarbonBlack.Audit.API.Key.Created.Retrieved": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_api_key_created_retrieved.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_api_key_created_retrieved.yml"
      ]
    ],
    "CarbonBlack.Audit.Admin.Grant": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_admin_grant.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_admin_grant.yml"
      ]
    ],
    "CarbonBlack.Audit.Flagged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_flagged.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_flagged.yml"
      ]
    ],
    "CarbonBlack.AlertV2.Passthrough": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_passthrough.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_passthrough.yml"
      ]
    ],
    "CarbonBlack.Audit.User.Added.Outside.Org": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_user_added_outside_org.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/carbonblack_rules/cb_audit_user_added_outside_org.yml"
      ]
    ],
    "Atlassian.User.LoggedInAsUser": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/atlassian_rules/user_logged_in_as_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/atlassian_rules/user_logged_in_as_user.yml"
      ]
    ],
    "Slack.AuditLogs.LegalHoldPolicyModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_legal_hold_policy_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_legal_hold_policy_modified.yml"
      ]
    ],
    "Slack.AuditLogs.AppAccessExpanded": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_app_access_expanded.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_app_access_expanded.yml"
      ]
    ],
    "Slack.AuditLogs.InformationBarrierModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_information_barrier_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_information_barrier_modified.yml"
      ]
    ],
    "Slack.AuditLogs.PassthroughAnomaly": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_passthrough_anomaly.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_passthrough_anomaly.yml"
      ]
    ],
    "Slack.AuditLogs.UserPrivilegeEscalation": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_user_privilege_escalation.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_user_privilege_escalation.yml"
      ]
    ],
    "Slack.AuditLogs.PrivateChannelMadePublic": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_private_channel_made_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_private_channel_made_public.yml"
      ]
    ],
    "Slack.AuditLogs.OrgDeleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_org_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_org_deleted.yml"
      ]
    ],
    "Slack.AuditLogs.MFASettingsChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_mfa_settings_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_mfa_settings_changed.yml"
      ]
    ],
    "Slack.AuditLogs.ServiceOwnerTransferred": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_service_owner_transferred.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_service_owner_transferred.yml"
      ]
    ],
    "Slack.AuditLogs.PotentiallyMaliciousFileShared": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_potentially_malicious_file_shared.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_potentially_malicious_file_shared.yml"
      ]
    ],
    "Slack.AuditLogs.EKMConfigChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_ekm_config_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_ekm_config_changed.yml"
      ]
    ],
    "Slack.AuditLogs.EKMSlackbotUnenrolled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_ekm_slackbot_unenrolled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_ekm_slackbot_unenrolled.yml"
      ]
    ],
    "Slack.AuditLogs.IntuneMDMDisabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_intune_mdm_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_intune_mdm_disabled.yml"
      ]
    ],
    "Slack.AuditLogs.EKMUnenrolled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_ekm_unenrolled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_ekm_unenrolled.yml"
      ]
    ],
    "Slack.AuditLogs.SSOSettingsChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_sso_settings_changed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_sso_settings_changed.yml"
      ]
    ],
    "Slack.AuditLogs.IDPConfigurationChanged": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_idp_configuration_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_idp_configuration_change.yml"
      ]
    ],
    "Slack.AuditLogs.OrgCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_org_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_org_created.yml"
      ]
    ],
    "Slack.AuditLogs.AppRemoved": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_app_removed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_app_removed.yml"
      ]
    ],
    "Slack.AuditLogs.AppAdded": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_app_added.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_app_added.yml"
      ]
    ],
    "Slack.AuditLogs.DLPModified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_dlp_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_dlp_modified.yml"
      ]
    ],
    "Slack.AuditLogs.ApplicationDoS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_application_dos.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_application_dos.yml"
      ]
    ],
    "Slack.AuditLogs.UserPrivilegeChangedToUser": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_privilege_changed_to_user.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/slack_rules/slack_privilege_changed_to_user.yml"
      ]
    ],
    "Osquery.SSHListener": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_ssh_listener.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_ssh_listener.yml"
      ]
    ],
    "Osquery.Mac.AutoUpdateEnabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_enable_auto_update.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_enable_auto_update.yml"
      ]
    ],
    "Osquery.UnsupportedMacOS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_outdated_macos.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_outdated_macos.yml"
      ]
    ],
    "Osquery.SuspiciousCron": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_suspicious_cron.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_suspicious_cron.yml"
      ]
    ],
    "Osquery.Linux.LoginFromNonOffice": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_linux_logins_non_office.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_linux_logins_non_office.yml"
      ]
    ],
    "Osquery.Mac.ApplicationFirewallSettings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_application_firewall.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_application_firewall.yml"
      ]
    ],
    "Osquery.Linux.Mac.VulnerableXZliblzma": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_linux_mac_vulnerable_xz_liblzma.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_linux_mac_vulnerable_xz_liblzma.yml"
      ]
    ],
    "Osquery.Mac.UnwantedChromeExtensions": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_unwanted_chrome_extensions.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_unwanted_chrome_extensions.yml"
      ]
    ],
    "Osquery.Mac.OSXAttacksKeyboardEvents": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_osx_attacks_keyboard_events.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_osx_attacks_keyboard_events.yml"
      ]
    ],
    "Osquery.OutdatedAgent": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_outdated.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_outdated.yml"
      ]
    ],
    "Osquery.Mac.OSXAttacks": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_osx_attacks.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_mac_osx_attacks.yml"
      ]
    ],
    "Osquery.OSSECRootkitDetected": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_ossec.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_ossec.yml"
      ]
    ],
    "Osquery.Linux.AWSCommandExecuted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_linux_aws_commands.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/osquery_rules/osquery_linux_aws_commands.yml"
      ]
    ],
    "GitLab.Production.Password.Reset.Multiple.Emails": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gitlab_rules/gitlab_production_password_reset_multiple_emails.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gitlab_rules/gitlab_production_password_reset_multiple_emails.yml"
      ]
    ],
    "GitLab.Audit.Password.Reset.Multiple.Emails": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gitlab_rules/gitlab_audit_password_reset_multiple_emails.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gitlab_rules/gitlab_audit_password_reset_multiple_emails.yml"
      ]
    ],
    "GCP.K8s.New.Daemonset.Deployed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_new_daemonset_deployed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_new_daemonset_deployed.yml"
      ]
    ],
    "GCP.K8S.Pod.Create.Or.Modify.Host.Path.Volume.Mount": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_pod_create_or_modify_host_path_vol_mount.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_pod_create_or_modify_host_path_vol_mount.yml"
      ]
    ],
    "GCP.K8S.Privileged.Pod.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_privileged_pod_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_privileged_pod_created.yml"
      ]
    ],
    "GCP.K8s.Pod.Attached.To.Node.Host.Network": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_pod_attached_to_node_host_network.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_pod_attached_to_node_host_network.yml"
      ]
    ],
    "GCP.GKE.Kubernetes.Cron.Job.Created.Or.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_cron_job_created_or_modified.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_cron_job_created_or_modified.yml"
      ]
    ],
    "GCP.K8s.Pod.Using.Host.PID.Namespace": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_pod_using_host_pid_namespace.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_pod_using_host_pid_namespace.yml"
      ]
    ],
    "GCP.K8S.Service.Type.NodePort.Deployed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_service_type_node_port_deployed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_service_type_node_port_deployed.yml"
      ]
    ],
    "GCP.K8s.IOC.Activity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_ioc_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_ioc_activity.yml"
      ]
    ],
    "GCP.K8s.ExecIntoPod": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_exec_into_pod.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/gcp_k8s_rules/gcp_k8s_exec_into_pod.yml"
      ]
    ],
    "Asana.Workspace.Require.App.Approvals.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_require_app_approvals_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_require_app_approvals_disabled.yml"
      ]
    ],
    "Asana.Team.Privacy.Public": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_team_privacy_public.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_team_privacy_public.yml"
      ]
    ],
    "Asana.Workspace.New.Admin": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_new_admin.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_new_admin.yml"
      ]
    ],
    "Asana.Service.Account.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_service_account_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_service_account_created.yml"
      ]
    ],
    "Asana.Workspace.Form.Link.Auth.Requirement.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_form_link_auth_requirement_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_form_link_auth_requirement_disabled.yml"
      ]
    ],
    "Asana.Workspace.Password.Requirements.Simple": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_password_requirements_simple.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_password_requirements_simple.yml"
      ]
    ],
    "Asana.Workspace.SAML.Optional": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_saml_optional.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_saml_optional.yml"
      ]
    ],
    "Asana.Workspace.Default.Session.Duration.Never": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_default_session_duration_never.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_default_session_duration_never.yml"
      ]
    ],
    "Asana.Workspace.Guest.Invite.Permissions.Anyone": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_guest_invite_permissions_anyone.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_guest_invite_permissions_anyone.yml"
      ]
    ],
    "Asana.Workspace.Email.Domain.Added": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_email_domain_added.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_email_domain_added.yml"
      ]
    ],
    "Asana.Workspace.Org.Export": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_org_export.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/asana_rules/asana_workspace_org_export.yml"
      ]
    ],
    "Okta.Refresh.Access.Token.Reuse": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_app_refresh_access_token_reuse.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_app_refresh_access_token_reuse.yml"
      ]
    ],
    "Okta.Global.MFA.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_admin_disabled_mfa.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_admin_disabled_mfa.yml"
      ]
    ],
    "Okta.APIKeyRevoked": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_api_key_revoked.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_api_key_revoked.yml"
      ]
    ],
    "Okta.PotentiallyStolenSession": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_potentially_stolen_session.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_potentially_stolen_session.yml"
      ]
    ],
    "Okta.User.MFA.Reset.All": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_mfa_reset_all.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_mfa_reset_all.yml"
      ]
    ],
    "Okta.User.Account.Locked": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_account_locked.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_account_locked.yml"
      ]
    ],
    "Okta.User.MFA.Factor.Suspend": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_mfa_factor_suspend.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_mfa_factor_suspend.yml"
      ]
    ],
    "Okta.Password.Extraction.via.SCIM": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_password_extraction_via_scim.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_password_extraction_via_scim.yml"
      ]
    ],
    "Okta.App.Unauthorized.Access.Attempt": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_app_unauthorized_access_attempt.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_app_unauthorized_access_attempt.yml"
      ]
    ],
    "Okta.User.Reported.Suspicious.Activity": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_reported_suspicious_activity.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_reported_suspicious_activity.yml"
      ]
    ],
    "Okta.Support.Reset": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_support_reset.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_support_reset.yml"
      ]
    ],
    "Okta.Anonymizing.VPN.Login": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_anonymizing_vpn_login.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_anonymizing_vpn_login.yml"
      ]
    ],
    "Okta.User.MFA.Reset.Single": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_mfa_reset.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_user_mfa_reset.yml"
      ]
    ],
    "Okta.AdminRoleAssigned": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_admin_role_assigned.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_admin_role_assigned.yml"
      ]
    ],
    "Okta.APIKeyCreated": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_api_key_created.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_api_key_created.yml"
      ]
    ],
    "Okta.New.Behavior.Accessing.Admin.Console": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_new_behavior_accessing_admin_console.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_new_behavior_accessing_admin_console.yml"
      ]
    ],
    "Okta.Group.Admin.Role.Assigned": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_group_admin_role_assigned.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_group_admin_role_assigned.yml"
      ]
    ],
    "Okta.Support.Access": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_account_support_access.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_account_support_access.yml"
      ]
    ],
    "Okta.Rate.Limits": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_rate_limits.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_rate_limits.yml"
      ]
    ],
    "Okta.SSO.to.AWS": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_sso_to_aws.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_sso_to_aws.yml"
      ]
    ],
    "Okta.Org2org.Creation.Modification": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_org2org_creation_modification.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_org2org_creation_modification.yml"
      ]
    ],
    "Okta.PasswordAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_password_accessed.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_password_accessed.yml"
      ]
    ],
    "Okta.ThreatInsight.Security.Threat.Detected": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_threatinsight_security_threat_detected.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_threatinsight_security_threat_detected.yml"
      ]
    ],
    "Okta.Phishing.Attempt.Blocked.FastPass": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_phishing_attempt_blocked_by_fastpass.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_phishing_attempt_blocked_by_fastpass.yml"
      ]
    ],
    "Okta.Identity.Provider.Created.Modified": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_idp_create_modify.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_idp_create_modify.yml"
      ]
    ],
    "Okta.Login.Success": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_login_signal.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_login_signal.yml"
      ]
    ],
    "Okta.Identity.Provider.SignIn": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_idp_signin.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_idp_signin.yml"
      ]
    ],
    "Okta.Login.Without.Push.Marker": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_login_without_push_marker.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/okta_rules/okta_login_without_push_marker.yml"
      ]
    ],
    "Thinkst.CanaryIncident": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/thinkstcanary_rules/thinkst_canary_incident.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/thinkstcanary_rules/thinkst_canary_incident.yml"
      ]
    ],
    "Thinkst.CanaryTokenIncident": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/thinkstcanary_rules/thinkst_canarytoken_incident.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/thinkstcanary_rules/thinkst_canarytoken_incident.yml"
      ]
    ],
    "Thinkst.CanaryDCRC": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/thinkstcanary_rules/thinkst_canary_dcrc.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/thinkstcanary_rules/thinkst_canary_dcrc.yml"
      ]
    ],
    "ZIA.Account.Access.Removed": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_account_access_removal.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_account_access_removal.yml"
      ]
    ],
    "ZIA.Insecure.Password.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_insecure_password_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_insecure_password_settings.yml"
      ]
    ],
    "ZIA.Backup.Deleted": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_backup_deleted.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_backup_deleted.yml"
      ]
    ],
    "ZIA.Logs.Downloaded": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_logs_downloaded.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_logs_downloaded.yml"
      ]
    ],
    "ZIA.Log.Streaming.Disabled": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_log_streaming_disabled.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_log_streaming_disabled.yml"
      ]
    ],
    "ZIA.Golden.Restore.Point.Dropped": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_golden_restore_point_dropped.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_golden_restore_point_dropped.yml"
      ]
    ],
    "ZIA.Cloud.Account.Created": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_create_cloud_account.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_create_cloud_account.yml"
      ]
    ],
    "ZIA.Additional.Cloud.Roles": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_additional_cloud_roles.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_additional_cloud_roles.yml"
      ]
    ],
    "ZIA.Password.Expiration": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_password_expiration.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_password_expiration.yml"
      ]
    ],
    "ZIA.Trust.Modification": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_trust_modification.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/zscaler_rules/zia/zia_trust_modification.yml"
      ]
    ],
    "Tines.Team.Destruction": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_team_destruction.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_team_destruction.yml"
      ]
    ],
    "Tines.Story.Items.Destruction": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_story_items_destruction.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_story_items_destruction.yml"
      ]
    ],
    "Tines.Actions.DisabledChanges": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_actions_disabled_changes.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_actions_disabled_changes.yml"
      ]
    ],
    "Tines.Enqueued.Retrying.Job.Destruction": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_enqueued_retrying_job_deletion.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_enqueued_retrying_job_deletion.yml"
      ]
    ],
    "Tines.SSO.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_sso_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_sso_settings.yml"
      ]
    ],
    "Tines.Story.Jobs.Clearance": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_story_jobs_clearance.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_story_jobs_clearance.yml"
      ]
    ],
    "Tines.Custom.CertificateAuthority": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_custom_ca.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_custom_ca.yml"
      ]
    ],
    "Tines.Global.Resource.Destruction": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_global_resource_destruction.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_global_resource_destruction.yml"
      ]
    ],
    "Tines.Tenant.AuthToken": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_tenant_authtoken.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/tines_rules/tines_tenant_authtoken.yml"
      ]
    ],
    "Snyk.ServiceAccount.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_svcacct_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_svcacct_change.yml"
      ]
    ],
    "Snyk.Role.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_role_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_role_change.yml"
      ]
    ],
    "Snyk.Project.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_project_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_project_settings.yml"
      ]
    ],
    "Snyk.Org.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_org_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_org_settings.yml"
      ]
    ],
    "Snyk.OU.Change": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_ou_change.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_ou_change.yml"
      ]
    ],
    "Snyk.System.PolicySetting": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_system_policysetting.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_system_policysetting.yml"
      ]
    ],
    "Snyk.System.SSO": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_system_sso.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_system_sso.yml"
      ]
    ],
    "Snyk.User.Management": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_user_mgmt.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_user_mgmt.yml"
      ]
    ],
    "Snyk.Misc.Settings": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_misc_settings.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_misc_settings.yml"
      ]
    ],
    "Snyk.System.ExternalAccess": [
      [
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_system_externalaccess.py",
        "/Users/jacknaglieri/Development/panther/panther-analysis/rules/snyk_rules/snyk_system_externalaccess.yml"
      ]
    ]
  },
  "mitre_analysis": {
    "total_rules": 586,
    "rules_with_mitre": 341,
    "rules_without_mitre": 245,
    "coverage_percentage": 58.19112627986348,
    "tactics": {
      "TA0001": {
        "name": "Initial Access",
        "rules": [
          "Standard.ImpossibleTravel.Login",
          "Standard.SignInFromRogueState",
          "Standard.MaliciousSSODNSLookup",
          "Netskope.NetskopePersonnelActivity",
          "GitHub.Branch.PolicyOverride",
          "GitHub.Branch.ProtectionDisabled",
          "Github.Repo.CollaboratorChange",
          "GitHub.Team.Modified",
          "GitHub.Org.Modified",
          "Teleport.LocalUserLoginWithoutMFA",
          "Amazon.EKS.AnonymousAPIAccess",
          "Box.Shield.Suspicious.Alert",
          "Box.New.Login",
          "Box.Untrusted.Device",
          "GSuite.LoginType",
          "GSuite.Workspace.GmailSecuritySandboxDisabled",
          "GSuite.Workspace.GmailPredeliveryScanningDisabled",
          "Wiz.Rotate.Service.Account.Secret",
          "Wiz.Service.Account.Change",
          "AWS.EC2.Vulnerable.XZ.Image.Launched",
          "AWS.CloudTrail.IAMCompromisedKeyQuarantine",
          "AWS.Console.LoginWithoutMFA",
          "AWS.Console.LoginWithoutSAML",
          "Crowdstrike.DNS.Request",
          "Azure.Audit.MFADisabled",
          "Azure.Audit.RiskLevelPassthrough",
          "Azure.Audit.ManyFailedSignIns",
          "Azure.Audit.InviteExternalUsers",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "Slack.AuditLogs.PotentiallyMaliciousFileShared",
          "Osquery.Linux.LoginFromNonOffice",
          "Osquery.Linux.Mac.VulnerableXZliblzma",
          "GitLab.Production.Password.Reset.Multiple.Emails",
          "GitLab.Production.Password.Reset.Multiple.Emails",
          "GitLab.Audit.Password.Reset.Multiple.Emails",
          "GitLab.Audit.Password.Reset.Multiple.Emails",
          "GCP.K8S.Service.Type.NodePort.Deployed",
          "Okta.Support.Reset",
          "Okta.New.Behavior.Accessing.Admin.Console",
          "Okta.Support.Access",
          "Okta.Phishing.Attempt.Blocked.FastPass",
          "Okta.Identity.Provider.Created.Modified",
          "Okta.Identity.Provider.SignIn"
        ],
        "techniques": [
          "T1566.001",
          "T1566",
          "T1195",
          "T1528",
          "T1199",
          "T1078.004",
          "T1078",
          "T1195.001",
          "T1190"
        ]
      },
      "TA0006": {
        "name": "Credential Access",
        "rules": [
          "Standard.BruteForceByUser",
          "Standard.BruteForceByIP",
          "Zendesk.NewAPIToken",
          "Netskope.AdminLoggedOutLoginFailures",
          "Netskope.UnauthorizedAPICalls",
          "GitHub.Secret.Scanning.Alert.Created",
          "Teleport.AuthErrors",
          "OneLogin.PasswordAccess",
          "OneLogin.UserAccountLocked",
          "OnePassword.Unusual.Client",
          "OnePassword.Lut.Sensitive.Item",
          "OnePassword.Sensitive.Item",
          "Microsoft365.Brute.Force.Login.by.User",
          "GSuite.DeviceUnlockFailure",
          "GSuite.Workspace.PasswordEnforceStrongDisabled",
          "GSuite.Workspace.PasswordReuseEnabled",
          "GSuite.LeakedPassword",
          "Wiz.Update.Login.Settings",
          "AWS.BedrockModelInvocation.GuardRailIntervened",
          "Snowflake.Stream.BruteForceByUsername",
          "Snowflake.Stream.BruteForceByIp",
          "AWS.SecretsManager.BatchRetrieveSecrets",
          "AWS.SecretsManager.RetrieveSecretsMultiRegion",
          "AWS.CloudTrail.IAMCompromisedKeyQuarantine",
          "AWS.Console.RootLoginFailed",
          "AWS.EC2.ManyPasswordReadAttempts",
          "AWS.SecretsManager.RetrieveSecrets",
          "AWS.SSM.DecryptSSMParams",
          "AWS.IAM.AccessKeyCompromised",
          "AWS.SecretsManager.BatchRetrieveSecretsCatchAll",
          "AWS.Unsuccessful.MFA.attempt",
          "Crowdstrike.API.Key.Created",
          "Crowdstrike.SingleIpAllowlisted",
          "Crowdstrike.IpAllowlistChanged",
          "Azure.Audit.RiskLevelPassthrough",
          "Azure.Audit.ManyFailedSignIns",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.Flagged",
          "Slack.AuditLogs.SSOSettingsChanged",
          "Slack.AuditLogs.IDPConfigurationChanged",
          "Okta.PotentiallyStolenSession",
          "Okta.Password.Extraction.via.SCIM",
          "Okta.Anonymizing.VPN.Login",
          "Okta.APIKeyCreated",
          "Okta.Rate.Limits",
          "Okta.Org2org.Creation.Modification",
          "Okta.PasswordAccess",
          "Okta.Phishing.Attempt.Blocked.FastPass",
          "Okta.Identity.Provider.Created.Modified"
        ],
        "techniques": [
          "T1111",
          "T1556",
          "T1550",
          "T1110",
          "T1098.001",
          "T1528",
          "T1555",
          "T1539",
          "T1621",
          "T1552.001",
          "T1556.009",
          "T0018.000",
          "T1552"
        ]
      },
      "TA0005": {
        "name": "Defense Evasion",
        "rules": [
          "Standard.MFADisabled",
          "MongoDB.Alerting.Disabled.Or.Deleted",
          "GitHub.Repo.RulesetModified",
          "GitHub.Advanced.Security.Change",
          "Teleport.CompanyDomainLoginWithoutSAML",
          "OneLogin.AuthFactorRemoved",
          "Sublime.Message.Source.Deleted.Or.Deactivated",
          "Sublime.Mailbox.Deactivated",
          "Sublime.Rules.Deleted.Or.Deactivated",
          "Panther.SAML.Modified",
          "Panther.Detection.Deleted",
          "GCP.UnusedRegions",
          "GSuite.AdvancedProtection",
          "GSuite.TwoStepVerification",
          "Wiz.Rule.Change",
          "Wiz.CICD.Scan.Policy.Updated.Or.Deleted",
          "Wiz.Update.Scanner.Settings",
          "Wiz.Image.Integrity.Validator.Updated.Or.Deleted",
          "Wiz.Connector.Updated.Or.Deleted",
          "Wiz.Data.Classifier.Updated.Or.Deleted",
          "Wiz.User.Created.Or.Deleted",
          "Wiz.Integration.Updated.Or.Deleted",
          "Snowflake.Stream.LoginWithoutMFA",
          "AWS.UnusedRegion",
          "AWS.EC2.GatewayModified",
          "AWS.Macie.Evasion",
          "AWS.ConfigService.DisabledDeleted",
          "AWS.CloudTrail.Stopped",
          "AWS.CloudTrail.EventSelectorsDisabled",
          "AWS.CloudTrail.SecurityConfigurationChange",
          "AWS.CloudTrail.DNSLogsDeleted",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.IPSet.Modified",
          "AWS.CloudTrail.ShortLifecycle",
          "AWS.CloudTrail.VPCE.AccessDenied",
          "AWS.Bedrock.DeleteModelInvocationLoggingConfiguration",
          "AWS.CloudTrail.EnableRegion",
          "AWS.EC2.NetworkACLModified",
          "AWS.VPCFlow.LogsDeleted",
          "AWS.ECR.CRUD",
          "AWS.EC2.ManualSecurityGroupChange",
          "AWS.SecurityHub.Finding.Evasion",
          "AWS.EC2.SecurityGroupModified",
          "AWS.EC2.VPCModified",
          "AWS.Bedrock.GuardrailUpdateDelete",
          "AWS.CloudTrail.AttemptToLeaveOrg",
          "AWS.CloudTrail.AttemptToLeaveOrg",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.ECR.EVENTS",
          "AWS.User.Login.Profile.Modified",
          "AWS.User.Login.Profile.Modified",
          "AWS.Modify.Cloud.Compute.Infrastructure",
          "AWS.CloudTrail.VPCE.ExternalPrincipal",
          "AWS.LAMBDA.CRUD",
          "Crowdstrike.UserDeleted",
          "Crowdstrike.SingleIpAllowlisted",
          "Crowdstrike.API.Key.Deleted",
          "Crowdstrike.IpAllowlistChanged",
          "Azure.Audit.MFADisabled",
          "Azure.Audit.PolicyChanged",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.Data.Forwarder.Stopped",
          "Slack.AuditLogs.LegalHoldPolicyModified",
          "Slack.AuditLogs.InformationBarrierModified",
          "Slack.AuditLogs.PrivateChannelMadePublic",
          "Slack.AuditLogs.MFASettingsChanged",
          "Slack.AuditLogs.ServiceOwnerTransferred",
          "Slack.AuditLogs.EKMConfigChanged",
          "Slack.AuditLogs.IntuneMDMDisabled",
          "Slack.AuditLogs.EKMUnenrolled",
          "Slack.AuditLogs.AppRemoved",
          "Slack.AuditLogs.DLPModified",
          "Slack.AuditLogs.DLPModified",
          "Osquery.Mac.AutoUpdateEnabled",
          "Osquery.Mac.ApplicationFirewallSettings",
          "Osquery.OSSECRootkitDetected",
          "Okta.Global.MFA.Disabled",
          "ZIA.Insecure.Password.Settings",
          "ZIA.Backup.Deleted",
          "ZIA.Log.Streaming.Disabled",
          "ZIA.Golden.Restore.Point.Dropped"
        ],
        "techniques": [
          "T1600",
          "T1562",
          "T1222",
          "T1599",
          "T1525",
          "T1108",
          "T1556.006",
          "T1556",
          "T1578",
          "T1562.003",
          "T1078",
          "T1556.009",
          "T1562.001",
          "T1526",
          "T1562.008",
          "T1550",
          "T1564",
          "T1070.009",
          "T1014",
          "T1070",
          "T1090",
          "T1666",
          "T1535"
        ]
      },
      "TA0004": {
        "name": "Privilege Escalation",
        "rules": [
          "Standard.AdminRoleAssigned",
          "Zendesk.AccountOwnerChanged",
          "Netskope.AdminUserChange",
          "Box.Large.Number.Permission.Updates",
          "GCP.Inbound.SSO.Profile.Created",
          "GCP.iam.serviceAccountKeys.create",
          "GCP.Cloudfunctions.Functions.Update",
          "GCP.IAM.serviceAccounts.signBlob",
          "GCP.Storage.Hmac.Keys.Create",
          "GCP.Cloudfunctions.Functions.Create",
          "GCP.IAM.CustomRoleChanges",
          "GCP.compute.instances.create.Privilege.Escalation",
          "GCP.User.Added.To.Privileged.Group",
          "GCP.User.Added.To.Privileged.Group",
          "GCP.Privilege.Escalation.By.Deployments.Create",
          "GCP.CloudBuild.Potential.Privilege.Escalation",
          "GCP.IAM.serviceAccounts.signJwt.Privilege.Escalation",
          "GCP.serviceusage.apiKeys.create.Privilege.Escalation",
          "GCP.Workload.Identity.Pool.Created.or.Updated",
          "GCP.Workforce.Pool.Created.or.Updated",
          "GCP.IAM.serviceAccounts.getAccessToken.Privilege.Escalation",
          "Wiz.SAML.Identity.Provider.Change",
          "Snowflake.Stream.PublicRoleGrant",
          "Snowflake.Stream.AccountAdminGranted",
          "AWS.CloudTrail.IAMAssumeRoleBlacklistIgnored",
          "AWS.Console.RootLogin",
          "AWS.IAM.PolicyModified",
          "AWS.WAF.Disassociation",
          "AWS.Root.Activity",
          "Crowdstrike.AdminRoleAssigned",
          "Crowdstrike.UserPasswordChange",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.Admin.Grant",
          "Slack.AuditLogs.AppAccessExpanded",
          "Slack.AuditLogs.UserPrivilegeEscalation",
          "GCP.K8S.Pod.Create.Or.Modify.Host.Path.Volume.Mount",
          "GCP.K8S.Privileged.Pod.Created",
          "GCP.K8s.Pod.Attached.To.Node.Host.Network",
          "GCP.K8s.Pod.Using.Host.PID.Namespace",
          "Okta.AdminRoleAssigned",
          "Okta.Org2org.Creation.Modification",
          "ZIA.Additional.Cloud.Roles",
          "ZIA.Trust.Modification"
        ],
        "techniques": [
          "T1098.001",
          "T1098",
          "T1484",
          "T1611",
          "T1484.002",
          "T1078.004",
          "T1078",
          "T1098.003",
          "T1484.001",
          "T1548",
          "T1078.001",
          "T1498"
        ]
      },
      "TA0040": {
        "name": "Impact",
        "rules": [
          "Zendesk.UserSuspension",
          "Netskope.ManyDeletes",
          "OneLogin.ThresholdAccountsDeleted",
          "OneLogin.ThresholdAccountsModified",
          "Wiz.Revoke.User.Sessions",
          "AWS.BedrockModelInvocation.AbnormalTokenUsage",
          "AWS.KMS.CustomerManagedKeyLoss",
          "AWS.EC2.EBS.Encryption.Disabled",
          "AWS.EC2.EBS.Encryption.Disabled",
          "AWS.S3.BucketDeleted",
          "Crowdstrike.AllowlistRemoved",
          "Crowdstrike.API.Key.Deleted",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AWS.DNS.Crypto.Domain",
          "Slack.AuditLogs.OrgDeleted",
          "Slack.AuditLogs.ServiceOwnerTransferred",
          "Slack.AuditLogs.EKMSlackbotUnenrolled",
          "Slack.AuditLogs.AppRemoved",
          "Slack.AuditLogs.ApplicationDoS",
          "Slack.AuditLogs.UserPrivilegeChangedToUser",
          "Okta.Rate.Limits",
          "ZIA.Account.Access.Removed"
        ],
        "techniques": [
          "T1486",
          "T1496.004",
          "T1499.003",
          "T1496",
          "T1565",
          "T1498",
          "T1531",
          "T1489",
          "T1485"
        ]
      },
      "TA0003": {
        "name": "Persistence",
        "rules": [
          "Zendesk.MobileAppAccessUpdated",
          "MongoDB.org.Membership.Restriction.Disabled",
          "MongoDB.Access.Allowed.From.Anywhere",
          "GitHub.User.RoleUpdated",
          "GitHub.Org.AuthChange",
          "GitHub.Org.IpAllowlist",
          "GitHub.User.AccessKeyCreated",
          "Teleport.SAMLLoginWithoutCompanyDomain",
          "Teleport.CreateUserAccounts",
          "Teleport.LongLivedCerts",
          "Teleport.RoleCreated",
          "Panther.User.Modified",
          "Panther.Sensitive.Role",
          "Microsoft365.Exchange.External.Forwarding",
          "GCP.Inbound.SSO.Profile.Created",
          "GCP.Inbound.SSO.Profile.Created",
          "GCP.IAM.CorporateEmail",
          "GCP.Workload.Identity.Pool.Created.or.Updated",
          "GCP.Workload.Identity.Pool.Created.or.Updated",
          "GCP.IAM.OrgFolderIAMChanges",
          "GCP.Workforce.Pool.Created.or.Updated",
          "GCP.Workforce.Pool.Created.or.Updated",
          "Standard.NewUserAccountCreated",
          "Standard.NewAWSAccountCreated",
          "GSuite.Workspace.GmailDefaultRoutingRuleModified",
          "GSuite.Workspace.TrustedDomainsAllowlist",
          "Wiz.Update.IP.Restrictions",
          "Wiz.User.Created.Or.Deleted",
          "Wiz.User.Role.Updated.Or.Deleted",
          "Snowflake.Stream.UserCreated",
          "Snowflake.Stream.UserEnabled",
          "AWS.RDS.MasterPasswordUpdated",
          "AWS.CloudTrail.IAMEntityCreatedWithoutCloudFormation",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.CloudTrail.RootPasswordChanged",
          "AWS.CloudTrail.NetworkACLPermissiveEntry",
          "AWS.CloudTrail.RootAccessKeyCreated",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.User.Login.Profile.Modified",
          "AWS.IAM.CredentialsUpdated",
          "Crowdstrike.AdminRoleAssigned",
          "Crowdstrike.SingleIpAllowlisted",
          "Crowdstrike.NewUserCreated",
          "Crowdstrike.UserPasswordChange",
          "Crowdstrike.IpAllowlistChanged",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.API.Key.Created.Retrieved",
          "CarbonBlack.Audit.User.Added.Outside.Org",
          "Slack.AuditLogs.PrivateChannelMadePublic",
          "Slack.AuditLogs.ServiceOwnerTransferred",
          "Slack.AuditLogs.SSOSettingsChanged",
          "Slack.AuditLogs.IDPConfigurationChanged",
          "Slack.AuditLogs.OrgCreated",
          "Slack.AuditLogs.AppAdded",
          "Osquery.Mac.UnwantedChromeExtensions",
          "GitLab.Production.Password.Reset.Multiple.Emails",
          "GitLab.Audit.Password.Reset.Multiple.Emails",
          "GCP.GKE.Kubernetes.Cron.Job.Created.Or.Modified",
          "Okta.Phishing.Attempt.Blocked.FastPass",
          "Okta.Identity.Provider.Created.Modified",
          "Okta.Identity.Provider.SignIn",
          "ZIA.Cloud.Account.Created",
          "ZIA.Additional.Cloud.Roles"
        ],
        "techniques": [
          "T1556",
          "T1114",
          "T1137.005",
          "T1098.001",
          "T1098",
          "T1136",
          "T1176",
          "T1078",
          "T1078.004",
          "T1098.003",
          "T1556.009",
          "T1136.003",
          "T1053.003",
          "T1505"
        ]
      },
      "TA0009": {
        "name": "Collection",
        "rules": [
          "Zendesk.SensitiveDataRedactionOff",
          "Zoom.PasscodeDisabled",
          "Microsoft365.Exchange.External.Forwarding",
          "Microsoft365.External.Document.Sharing",
          "GCP.GCS.Public",
          "GCP.GCS.IAMChanges",
          "GSuite.Drive.ExternalFileShare",
          "GSuite.DriveOverlyVisible",
          "GSuite.DriveVisibilityChanged",
          "GSuite.DocOwnershipTransfer",
          "GSuite.ExternalMailForwarding",
          "AWS.S3.ServerAccess.Unauthenticated",
          "AWS.S3.ServerAccess.IPWhitelist",
          "AWS.S3.ServerAccess.UnknownRequester",
          "AWS.S3.ServerAccess.Insecure",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "Osquery.Mac.OSXAttacksKeyboardEvents"
        ],
        "techniques": [
          "T1114",
          "T1039",
          "T1213",
          "T1114.003",
          "T1056",
          "T1530",
          "T1125"
        ]
      },
      "TA0008": {
        "name": "Lateral Movement",
        "rules": [
          "Zendesk.UserAssumption",
          "MongoDB.Access.Allowed.From.Anywhere",
          "OneLogin.UserAssumption",
          "OneLogin.UnauthorizedAccess",
          "OneLogin.ActiveLoginActivity",
          "AWS.EC2.MultiInstanceConnect",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.User.Login.Profile.Modified",
          "AppOmni.Alert.Passthrough",
          "AWS.VPC.SSHAllowedSignal",
          "Osquery.SSHListener"
        ],
        "techniques": [
          "T1550",
          "T1021.007",
          "T1021.005",
          "T1021",
          "T1021.004"
        ]
      },
      "TA0010": {
        "name": "Exfiltration",
        "rules": [
          "GitHub.Webhook.Modified",
          "GitHub.Repo.HookModified",
          "Github.Repo.VisibilityChange",
          "Box.Item.Shared.Externally",
          "Box.Event.Triggered.Externally",
          "Box.Shield.Anomalous.Download",
          "Box.Large.Number.Downloads",
          "Microsoft365.Exchange.External.Forwarding",
          "Google.Workspace.ManyDocsDownloaded",
          "Snowflake.Stream.FileDownloaded",
          "Snowflake.Stream.TableCopiedIntoStage",
          "Snowflake.Stream.TempStageCreated",
          "Snowflake.Stream.ExternalShares",
          "AWS.CloudTrail.AMIModifiedForPublicAccess",
          "AWS.RDS.ManualSnapshotCreated",
          "AWS.EC2.RouteTableModified",
          "AWS.S3.BucketPolicyModified",
          "AWS.CloudTrail.CodebuildProjectMadePublic",
          "AWS.RDS.PublicRestore",
          "AWS.CloudTrail.SnapshotMadePublic",
          "AWS.RDS.SnapshotShared",
          "AWS.CloudTrail.VPCE.ExternalPrincipal",
          "AWS.CloudTrail.ResourceMadePublic",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "Slack.AuditLogs.PrivateChannelMadePublic",
          "GCP.K8S.Pod.Create.Or.Modify.Host.Path.Volume.Mount"
        ],
        "techniques": [
          "T1048",
          "T1020",
          "T1567",
          "T1041",
          "T1537"
        ]
      },
      "TA0002": {
        "name": "Execution",
        "rules": [
          "Teleport.SuspiciousCommands",
          "Teleport.RootLogin",
          "Teleport.ScheduledJobs",
          "Box.Malicious.Content",
          "AWS.EC2.Startup.Script.Change",
          "AWS.EC2.Monitoring",
          "AWS.EC2.LaunchUnusualEC2Instances",
          "AWS.SSM.DistributedCommand",
          "AppOmni.Alert.Passthrough",
          "Osquery.SuspiciousCron",
          "Osquery.Linux.AWSCommandExecuted",
          "GCP.K8s.New.Daemonset.Deployed",
          "GCP.K8s.Pod.Using.Host.PID.Namespace"
        ],
        "techniques": [
          "T1059",
          "T1053",
          "T1204",
          "T1203",
          "T1610"
        ]
      },
      "TA0042": {
        "name": "Unknown Tactic",
        "rules": [
          "Teleport.SAMLCreated",
          "Azure.Audit.RoleChangedPIM",
          "AppOmni.Alert.Passthrough",
          "Osquery.Mac.OSXAttacks"
        ],
        "techniques": [
          "T1585",
          "T1588",
          "T1586",
          "T1608"
        ]
      },
      "TA0007": {
        "name": "Discovery",
        "rules": [
          "Teleport.NetworkScanning",
          "Amazon.EKS.Audit.Multiple403",
          "GSuite.CalendarMadePublic",
          "GSuite.Workspace.CalendarExternalSharingSetting",
          "AWS.CloudTrail.Account.Discovery",
          "AWS.IAM.AttachAdminRolePolicy",
          "AWS.IAM.BackdoorRole",
          "AWS.Potential.Backdoor.Lambda",
          "AWS.Lambda.UpdateFunctionConfiguration",
          "AWS.CloudTrail.Created",
          "AWS.CloudTrail.Password.Policy.Discovery",
          "AWS.IAM.AttachAdminUserPolicy",
          "AWS.CloudTrail.VPCE.AccessDenied",
          "AWS.IAM.CreateRole",
          "AWS.IAM.CreateUser",
          "AWS.ConfigService.Created",
          "AWS.Lambda.UpdateFunctionCode",
          "AWS.EC2.DownloadInstanceUserData",
          "AWS.Software.Discovery",
          "AWS.IAMUser.ReconAccessDenied",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.CloudTrail.UnauthorizedAPICall",
          "AWS.CloudTrail.VPCE.ExternalPrincipal",
          "AWS.S3.ServerAccess.Error",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "ZIA.Logs.Downloaded",
          "ZIA.Password.Expiration"
        ],
        "techniques": [
          "T1538",
          "T1518",
          "T1654",
          "T1580",
          "T1201",
          "T1613",
          "T1046",
          "T1619",
          "T1078",
          "T1087",
          "T1526"
        ]
      },
      "TA0027": {
        "name": "Unknown Tactic",
        "rules": [
          "Amazon.EKS.Audit.SystemNamespaceFromPublicIP"
        ],
        "techniques": [
          "T1475"
        ]
      },
      "TA003": {
        "name": "Unknown Tactic",
        "rules": [
          "Microsoft365.MFA.Disabled"
        ],
        "techniques": [
          "T1556"
        ]
      },
      "TA005": {
        "name": "Unknown Tactic",
        "rules": [
          "Microsoft365.MFA.Disabled"
        ],
        "techniques": [
          "T1556"
        ]
      },
      "TA006": {
        "name": "Unknown Tactic",
        "rules": [
          "Microsoft365.MFA.Disabled"
        ],
        "techniques": [
          "T1556"
        ]
      },
      "TA0035": {
        "name": "Unknown Tactic",
        "rules": [
          "Wiz.Update.Support.Contact.List"
        ],
        "techniques": [
          "T1636.003"
        ]
      },
      "TA0011": {
        "name": "Command and Control",
        "rules": [
          "AWS.VPC.InboundPortWhitelist",
          "AWS.VPC.UnapprovedOutboundDNS",
          "AWS.VPC.InboundPortBlacklist",
          "Slack.AuditLogs.PassthroughAnomaly",
          "GCP.K8s.IOC.Activity"
        ],
        "techniques": [
          "T1573.002",
          "T1071",
          "T1571"
        ]
      }
    },
    "techniques": {
      "T1078": {
        "tactic": "TA0001",
        "rules": [
          "Standard.ImpossibleTravel.Login",
          "Standard.AdminRoleAssigned",
          "Zendesk.AccountOwnerChanged",
          "Zendesk.MobileAppAccessUpdated",
          "GitHub.User.AccessKeyCreated",
          "Teleport.LocalUserLoginWithoutMFA",
          "Box.Shield.Suspicious.Alert",
          "Box.New.Login",
          "Box.Untrusted.Device",
          "GCP.IAM.CustomRoleChanges",
          "GSuite.LoginType",
          "Snowflake.Stream.AccountAdminGranted",
          "AWS.IAM.AttachAdminRolePolicy",
          "AWS.IAM.BackdoorRole",
          "AWS.Potential.Backdoor.Lambda",
          "AWS.Lambda.UpdateFunctionConfiguration",
          "AWS.Console.LoginWithoutMFA",
          "AWS.Console.RootLogin",
          "AWS.IAM.AttachAdminUserPolicy",
          "AWS.IAM.CreateRole",
          "AWS.IAM.CreateUser",
          "AWS.Lambda.UpdateFunctionCode",
          "AWS.Console.LoginWithoutSAML",
          "AWS.Root.Activity",
          "Azure.Audit.MFADisabled",
          "Azure.Audit.RiskLevelPassthrough",
          "Azure.Audit.ManyFailedSignIns",
          "Azure.Audit.InviteExternalUsers",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "Osquery.Linux.LoginFromNonOffice",
          "Okta.AdminRoleAssigned"
        ]
      },
      "T1110": {
        "tactic": "TA0006",
        "rules": [
          "Standard.BruteForceByUser",
          "Standard.BruteForceByIP",
          "Netskope.AdminLoggedOutLoginFailures",
          "Netskope.UnauthorizedAPICalls",
          "Teleport.AuthErrors",
          "OneLogin.UserAccountLocked",
          "Microsoft365.Brute.Force.Login.by.User",
          "GSuite.DeviceUnlockFailure",
          "GSuite.Workspace.PasswordEnforceStrongDisabled",
          "GSuite.Workspace.PasswordReuseEnabled",
          "Snowflake.Stream.BruteForceByUsername",
          "Snowflake.Stream.BruteForceByIp",
          "AWS.Console.RootLoginFailed",
          "Azure.Audit.RiskLevelPassthrough",
          "Azure.Audit.ManyFailedSignIns",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.Flagged",
          "Okta.Rate.Limits"
        ]
      },
      "T1556": {
        "tactic": "TA0005",
        "rules": [
          "Standard.MFADisabled",
          "OneLogin.AuthFactorRemoved",
          "Microsoft365.MFA.Disabled",
          "Microsoft365.MFA.Disabled",
          "Microsoft365.MFA.Disabled",
          "GSuite.TwoStepVerification",
          "Wiz.Update.Login.Settings",
          "Snowflake.Stream.LoginWithoutMFA",
          "Azure.Audit.MFADisabled",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "Slack.AuditLogs.SSOSettingsChanged",
          "Slack.AuditLogs.SSOSettingsChanged",
          "Slack.AuditLogs.IDPConfigurationChanged",
          "Slack.AuditLogs.IDPConfigurationChanged",
          "Okta.Global.MFA.Disabled",
          "Okta.Password.Extraction.via.SCIM",
          "Okta.Anonymizing.VPN.Login",
          "Okta.Org2org.Creation.Modification",
          "Okta.Phishing.Attempt.Blocked.FastPass",
          "Okta.Identity.Provider.Created.Modified"
        ]
      },
      "T1078.004": {
        "tactic": "TA0001",
        "rules": [
          "Standard.SignInFromRogueState",
          "GCP.User.Added.To.Privileged.Group",
          "Wiz.Rotate.Service.Account.Secret",
          "Wiz.Service.Account.Change",
          "AWS.CloudTrail.IAMCompromisedKeyQuarantine",
          "Okta.New.Behavior.Accessing.Admin.Console",
          "Okta.Org2org.Creation.Modification",
          "Okta.Phishing.Attempt.Blocked.FastPass"
        ]
      },
      "T1566": {
        "tactic": "TA0001",
        "rules": [
          "Standard.MaliciousSSODNSLookup",
          "GSuite.Workspace.GmailSecuritySandboxDisabled",
          "GSuite.Workspace.GmailPredeliveryScanningDisabled",
          "Crowdstrike.DNS.Request",
          "AppOmni.Alert.Passthrough",
          "Okta.Phishing.Attempt.Blocked.FastPass"
        ]
      },
      "T1531": {
        "tactic": "TA0040",
        "rules": [
          "Zendesk.UserSuspension",
          "OneLogin.ThresholdAccountsDeleted",
          "OneLogin.ThresholdAccountsModified",
          "Wiz.Revoke.User.Sessions",
          "Crowdstrike.AllowlistRemoved",
          "Crowdstrike.API.Key.Deleted",
          "AppOmni.Alert.Passthrough",
          "Slack.AuditLogs.OrgDeleted",
          "Slack.AuditLogs.ServiceOwnerTransferred",
          "Slack.AuditLogs.UserPrivilegeChangedToUser",
          "ZIA.Account.Access.Removed"
        ]
      },
      "T1213": {
        "tactic": "TA0009",
        "rules": [
          "Zendesk.SensitiveDataRedactionOff",
          "GSuite.Drive.ExternalFileShare",
          "GSuite.DriveOverlyVisible",
          "GSuite.DriveVisibilityChanged",
          "GSuite.DocOwnershipTransfer",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1528": {
        "tactic": "TA0006",
        "rules": [
          "Zendesk.NewAPIToken",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "Okta.APIKeyCreated"
        ]
      },
      "T1550": {
        "tactic": "TA0008",
        "rules": [
          "Zendesk.UserAssumption",
          "OneLogin.UserAssumption",
          "OneLogin.UnauthorizedAccess",
          "OneLogin.ActiveLoginActivity",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.User.Login.Profile.Modified",
          "AWS.User.Login.Profile.Modified",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1098": {
        "tactic": "TA0004",
        "rules": [
          "Netskope.AdminUserChange",
          "GitHub.User.RoleUpdated",
          "GitHub.Org.AuthChange",
          "GitHub.Org.IpAllowlist",
          "Teleport.SAMLLoginWithoutCompanyDomain",
          "Teleport.LongLivedCerts",
          "Panther.User.Modified",
          "Panther.Sensitive.Role",
          "GSuite.Workspace.GmailDefaultRoutingRuleModified",
          "GSuite.Workspace.TrustedDomainsAllowlist",
          "AWS.RDS.MasterPasswordUpdated",
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.CloudTrail.RootPasswordChanged",
          "AWS.CloudTrail.NetworkACLPermissiveEntry",
          "AWS.CloudTrail.RootAccessKeyCreated",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.User.Login.Profile.Modified",
          "AWS.IAM.CredentialsUpdated",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.Admin.Grant",
          "Slack.AuditLogs.AppAccessExpanded",
          "Slack.AuditLogs.PrivateChannelMadePublic",
          "Slack.AuditLogs.ServiceOwnerTransferred",
          "GitLab.Production.Password.Reset.Multiple.Emails",
          "GitLab.Audit.Password.Reset.Multiple.Emails",
          "Okta.Identity.Provider.Created.Modified",
          "Okta.Identity.Provider.SignIn"
        ]
      },
      "T1485": {
        "tactic": "TA0040",
        "rules": [
          "Netskope.ManyDeletes",
          "AWS.KMS.CustomerManagedKeyLoss",
          "AWS.S3.BucketDeleted",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1195": {
        "tactic": "TA0001",
        "rules": [
          "Netskope.NetskopePersonnelActivity",
          "GitHub.Branch.PolicyOverride",
          "GitHub.Branch.ProtectionDisabled",
          "Github.Repo.CollaboratorChange",
          "GitHub.Team.Modified",
          "GitHub.Org.Modified",
          "GitLab.Production.Password.Reset.Multiple.Emails",
          "GitLab.Audit.Password.Reset.Multiple.Emails"
        ]
      },
      "T1556.009": {
        "tactic": "TA0003",
        "rules": [
          "MongoDB.org.Membership.Restriction.Disabled",
          "MongoDB.Access.Allowed.From.Anywhere",
          "GCP.IAM.OrgFolderIAMChanges",
          "Wiz.Update.IP.Restrictions",
          "Crowdstrike.SingleIpAllowlisted",
          "Crowdstrike.SingleIpAllowlisted",
          "Crowdstrike.SingleIpAllowlisted",
          "Crowdstrike.IpAllowlistChanged",
          "Crowdstrike.IpAllowlistChanged",
          "Crowdstrike.IpAllowlistChanged",
          "ZIA.Insecure.Password.Settings"
        ]
      },
      "T1562.001": {
        "tactic": "TA0005",
        "rules": [
          "MongoDB.Alerting.Disabled.Or.Deleted",
          "Sublime.Message.Source.Deleted.Or.Deactivated",
          "Sublime.Mailbox.Deactivated",
          "Sublime.Rules.Deleted.Or.Deactivated",
          "Wiz.Rule.Change",
          "Wiz.CICD.Scan.Policy.Updated.Or.Deleted",
          "Wiz.Update.Scanner.Settings",
          "Wiz.Image.Integrity.Validator.Updated.Or.Deleted",
          "Wiz.Connector.Updated.Or.Deleted",
          "Wiz.Data.Classifier.Updated.Or.Deleted",
          "Wiz.Integration.Updated.Or.Deleted",
          "AWS.Bedrock.GuardrailUpdateDelete",
          "Slack.AuditLogs.LegalHoldPolicyModified",
          "Slack.AuditLogs.InformationBarrierModified",
          "Slack.AuditLogs.IntuneMDMDisabled",
          "Slack.AuditLogs.DLPModified"
        ]
      },
      "T1021.007": {
        "tactic": "TA0008",
        "rules": [
          "MongoDB.Access.Allowed.From.Anywhere"
        ]
      },
      "T1562": {
        "tactic": "TA0005",
        "rules": [
          "GitHub.Repo.RulesetModified",
          "GitHub.Advanced.Security.Change",
          "Teleport.CompanyDomainLoginWithoutSAML",
          "Panther.SAML.Modified",
          "Panther.Detection.Deleted",
          "GSuite.AdvancedProtection",
          "AWS.EC2.GatewayModified",
          "AWS.Macie.Evasion",
          "AWS.ConfigService.DisabledDeleted",
          "AWS.CloudTrail.Stopped",
          "AWS.CloudTrail.EventSelectorsDisabled",
          "AWS.CloudTrail.SecurityConfigurationChange",
          "AWS.IPSet.Modified",
          "AWS.EC2.NetworkACLModified",
          "AWS.EC2.ManualSecurityGroupChange",
          "AWS.SecurityHub.Finding.Evasion",
          "AWS.EC2.SecurityGroupModified",
          "AWS.EC2.VPCModified",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AppOmni.Alert.Passthrough",
          "Osquery.Mac.AutoUpdateEnabled",
          "Osquery.Mac.ApplicationFirewallSettings"
        ]
      },
      "T1020": {
        "tactic": "TA0010",
        "rules": [
          "GitHub.Webhook.Modified",
          "GitHub.Repo.HookModified",
          "Microsoft365.Exchange.External.Forwarding",
          "AWS.RDS.PublicRestore"
        ]
      },
      "T1552": {
        "tactic": "TA0006",
        "rules": [
          "GitHub.Secret.Scanning.Alert.Created",
          "OneLogin.PasswordAccess",
          "OnePassword.Lut.Sensitive.Item",
          "OnePassword.Sensitive.Item",
          "GSuite.LeakedPassword",
          "AWS.SecretsManager.BatchRetrieveSecrets",
          "AWS.SecretsManager.RetrieveSecretsMultiRegion",
          "AWS.SecretsManager.RetrieveSecrets",
          "AWS.IAM.AccessKeyCompromised",
          "AWS.SecretsManager.BatchRetrieveSecretsCatchAll",
          "AppOmni.Alert.Passthrough",
          "Okta.PasswordAccess"
        ]
      },
      "T1567": {
        "tactic": "TA0010",
        "rules": [
          "Github.Repo.VisibilityChange",
          "Box.Item.Shared.Externally",
          "Box.Event.Triggered.Externally",
          "Box.Shield.Anomalous.Download",
          "Box.Large.Number.Downloads",
          "Google.Workspace.ManyDocsDownloaded",
          "AWS.S3.BucketPolicyModified",
          "AWS.CloudTrail.CodebuildProjectMadePublic",
          "AppOmni.Alert.Passthrough",
          "Slack.AuditLogs.PrivateChannelMadePublic"
        ]
      },
      "T1059": {
        "tactic": "TA0002",
        "rules": [
          "Teleport.SuspiciousCommands",
          "Teleport.RootLogin",
          "AWS.EC2.Startup.Script.Change"
        ]
      },
      "T1136": {
        "tactic": "TA0003",
        "rules": [
          "Teleport.CreateUserAccounts",
          "GCP.IAM.CorporateEmail",
          "Standard.NewUserAccountCreated",
          "Standard.NewAWSAccountCreated",
          "Snowflake.Stream.UserCreated",
          "Snowflake.Stream.UserEnabled",
          "AWS.CloudTrail.IAMEntityCreatedWithoutCloudFormation",
          "AppOmni.Alert.Passthrough",
          "CarbonBlack.Audit.API.Key.Created.Retrieved",
          "CarbonBlack.Audit.User.Added.Outside.Org",
          "Slack.AuditLogs.OrgCreated"
        ]
      },
      "T1585": {
        "tactic": "TA0042",
        "rules": [
          "Teleport.SAMLCreated"
        ]
      },
      "T1053": {
        "tactic": "TA0002",
        "rules": [
          "Teleport.ScheduledJobs",
          "Osquery.SuspiciousCron"
        ]
      },
      "T1098.001": {
        "tactic": "TA0003",
        "rules": [
          "Teleport.RoleCreated",
          "Wiz.User.Role.Updated.Or.Deleted",
          "Crowdstrike.API.Key.Created",
          "Crowdstrike.UserPasswordChange",
          "Crowdstrike.UserPasswordChange"
        ]
      },
      "T1046": {
        "tactic": "TA0007",
        "rules": [
          "Teleport.NetworkScanning"
        ]
      },
      "T1190": {
        "tactic": "TA0001",
        "rules": [
          "Amazon.EKS.AnonymousAPIAccess",
          "AppOmni.Alert.Passthrough",
          "GitLab.Production.Password.Reset.Multiple.Emails",
          "GitLab.Audit.Password.Reset.Multiple.Emails",
          "GCP.K8S.Service.Type.NodePort.Deployed"
        ]
      },
      "T1475": {
        "tactic": "TA0027",
        "rules": [
          "Amazon.EKS.Audit.SystemNamespaceFromPublicIP"
        ]
      },
      "T1613": {
        "tactic": "TA0007",
        "rules": [
          "Amazon.EKS.Audit.Multiple403"
        ]
      },
      "T1204": {
        "tactic": "TA0002",
        "rules": [
          "Box.Malicious.Content",
          "AWS.EC2.Monitoring",
          "AppOmni.Alert.Passthrough",
          "Osquery.Linux.AWSCommandExecuted"
        ]
      },
      "T1548": {
        "tactic": "TA0004",
        "rules": [
          "Box.Large.Number.Permission.Updates",
          "GCP.iam.serviceAccountKeys.create",
          "GCP.Cloudfunctions.Functions.Update",
          "GCP.IAM.serviceAccounts.signBlob",
          "GCP.Storage.Hmac.Keys.Create",
          "GCP.Cloudfunctions.Functions.Create",
          "GCP.compute.instances.create.Privilege.Escalation",
          "GCP.Privilege.Escalation.By.Deployments.Create",
          "GCP.CloudBuild.Potential.Privilege.Escalation",
          "GCP.IAM.serviceAccounts.signJwt.Privilege.Escalation",
          "GCP.serviceusage.apiKeys.create.Privilege.Escalation",
          "GCP.IAM.serviceAccounts.getAccessToken.Privilege.Escalation",
          "AWS.CloudTrail.IAMAssumeRoleBlacklistIgnored",
          "AWS.IAM.PolicyModified",
          "AppOmni.Alert.Passthrough",
          "GCP.K8S.Privileged.Pod.Created"
        ]
      },
      "T1555": {
        "tactic": "TA0006",
        "rules": [
          "OnePassword.Unusual.Client",
          "AWS.EC2.ManyPasswordReadAttempts",
          "AWS.SSM.DecryptSSMParams"
        ]
      },
      "T1125": {
        "tactic": "TA0009",
        "rules": [
          "Zoom.PasscodeDisabled"
        ]
      },
      "T1137.005": {
        "tactic": "TA0003",
        "rules": [
          "Microsoft365.Exchange.External.Forwarding"
        ]
      },
      "T1114.003": {
        "tactic": "TA0009",
        "rules": [
          "Microsoft365.Exchange.External.Forwarding"
        ]
      },
      "T1039": {
        "tactic": "TA0009",
        "rules": [
          "Microsoft365.External.Document.Sharing"
        ]
      },
      "T1530": {
        "tactic": "TA0009",
        "rules": [
          "GCP.GCS.Public",
          "GCP.GCS.IAMChanges",
          "AWS.S3.ServerAccess.Unauthenticated",
          "AWS.S3.ServerAccess.IPWhitelist",
          "AWS.S3.ServerAccess.UnknownRequester",
          "AWS.S3.ServerAccess.Insecure",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1136.003": {
        "tactic": "TA0003",
        "rules": [
          "GCP.Inbound.SSO.Profile.Created",
          "GCP.Workload.Identity.Pool.Created.or.Updated",
          "GCP.Workforce.Pool.Created.or.Updated",
          "Wiz.User.Created.Or.Deleted",
          "Crowdstrike.NewUserCreated",
          "ZIA.Cloud.Account.Created"
        ]
      },
      "T1098.003": {
        "tactic": "TA0003",
        "rules": [
          "GCP.Inbound.SSO.Profile.Created",
          "GCP.Inbound.SSO.Profile.Created",
          "GCP.Workload.Identity.Pool.Created.or.Updated",
          "GCP.Workload.Identity.Pool.Created.or.Updated",
          "GCP.Workforce.Pool.Created.or.Updated",
          "GCP.Workforce.Pool.Created.or.Updated",
          "Crowdstrike.AdminRoleAssigned",
          "Crowdstrike.AdminRoleAssigned",
          "Slack.AuditLogs.UserPrivilegeEscalation",
          "ZIA.Additional.Cloud.Roles",
          "ZIA.Additional.Cloud.Roles"
        ]
      },
      "T1535": {
        "tactic": "TA0005",
        "rules": [
          "GCP.UnusedRegions",
          "AWS.UnusedRegion",
          "AWS.CloudTrail.EnableRegion",
          "AWS.ECR.EVENTS"
        ]
      },
      "T1484.001": {
        "tactic": "TA0004",
        "rules": [
          "GCP.User.Added.To.Privileged.Group"
        ]
      },
      "T1114": {
        "tactic": "TA0009",
        "rules": [
          "GSuite.ExternalMailForwarding",
          "AppOmni.Alert.Passthrough",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1087": {
        "tactic": "TA0007",
        "rules": [
          "GSuite.CalendarMadePublic",
          "GSuite.Workspace.CalendarExternalSharingSetting",
          "AWS.CloudTrail.Account.Discovery",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1636.003": {
        "tactic": "TA0035",
        "rules": [
          "Wiz.Update.Support.Contact.List"
        ]
      },
      "T1484.002": {
        "tactic": "TA0004",
        "rules": [
          "Wiz.SAML.Identity.Provider.Change",
          "ZIA.Trust.Modification"
        ]
      },
      "T1070.009": {
        "tactic": "TA0005",
        "rules": [
          "Wiz.User.Created.Or.Deleted",
          "Slack.AuditLogs.AppRemoved"
        ]
      },
      "T1496.004": {
        "tactic": "TA0040",
        "rules": [
          "AWS.BedrockModelInvocation.AbnormalTokenUsage"
        ]
      },
      "T0018.000": {
        "tactic": "TA0006",
        "rules": [
          "AWS.BedrockModelInvocation.GuardRailIntervened"
        ]
      },
      "T1041": {
        "tactic": "TA0010",
        "rules": [
          "Snowflake.Stream.FileDownloaded",
          "Snowflake.Stream.TableCopiedIntoStage",
          "Snowflake.Stream.TempStageCreated",
          "GCP.K8S.Pod.Create.Or.Modify.Host.Path.Volume.Mount"
        ]
      },
      "T1078.001": {
        "tactic": "TA0004",
        "rules": [
          "Snowflake.Stream.PublicRoleGrant"
        ]
      },
      "T1537": {
        "tactic": "TA0010",
        "rules": [
          "Snowflake.Stream.ExternalShares",
          "AWS.CloudTrail.AMIModifiedForPublicAccess",
          "AWS.RDS.ManualSnapshotCreated",
          "AWS.CloudTrail.SnapshotMadePublic",
          "AWS.RDS.SnapshotShared",
          "AWS.CloudTrail.ResourceMadePublic",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1048": {
        "tactic": "TA0010",
        "rules": [
          "AWS.EC2.RouteTableModified",
          "AWS.CloudTrail.VPCE.ExternalPrincipal"
        ]
      },
      "T1195.001": {
        "tactic": "TA0001",
        "rules": [
          "AWS.EC2.Vulnerable.XZ.Image.Launched",
          "Osquery.Linux.Mac.VulnerableXZliblzma"
        ]
      },
      "T1552.001": {
        "tactic": "TA0006",
        "rules": [
          "AWS.CloudTrail.IAMCompromisedKeyQuarantine"
        ]
      },
      "T1538": {
        "tactic": "TA0007",
        "rules": [
          "AWS.CloudTrail.Created"
        ]
      },
      "T1021.005": {
        "tactic": "TA0008",
        "rules": [
          "AWS.EC2.MultiInstanceConnect"
        ]
      },
      "T1201": {
        "tactic": "TA0007",
        "rules": [
          "AWS.CloudTrail.Password.Policy.Discovery",
          "ZIA.Password.Expiration"
        ]
      },
      "T1562.008": {
        "tactic": "TA0005",
        "rules": [
          "AWS.CloudTrail.DNSLogsDeleted",
          "AWS.CloudTrail.ShortLifecycle",
          "AWS.VPCFlow.LogsDeleted",
          "AWS.CloudTrail.AttemptToLeaveOrg",
          "CarbonBlack.Audit.Data.Forwarder.Stopped",
          "Slack.AuditLogs.EKMConfigChanged",
          "ZIA.Backup.Deleted",
          "ZIA.Log.Streaming.Disabled",
          "ZIA.Golden.Restore.Point.Dropped"
        ]
      },
      "T1108": {
        "tactic": "TA0005",
        "rules": [
          "AWS.IAM.Backdoor.User.Keys",
          "AWS.CloudTrail.LoginProfileCreatedOrModified",
          "AWS.User.Login.Profile.Modified"
        ]
      },
      "T1599": {
        "tactic": "TA0005",
        "rules": [
          "AWS.CloudTrail.VPCE.AccessDenied",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.CloudTrail.VPCE.ExternalPrincipal"
        ]
      },
      "T1526": {
        "tactic": "TA0007",
        "rules": [
          "AWS.CloudTrail.VPCE.AccessDenied",
          "AWS.ConfigService.Created",
          "AWS.IAMUser.ReconAccessDenied",
          "AWS.CloudTrail.VPCE.SensitiveAPICalls",
          "AWS.CloudTrail.UnauthorizedAPICall",
          "AWS.CloudTrail.VPCE.ExternalPrincipal",
          "Azure.Audit.PolicyChanged"
        ]
      },
      "T1562.003": {
        "tactic": "TA0005",
        "rules": [
          "AWS.Bedrock.DeleteModelInvocationLoggingConfiguration"
        ]
      },
      "T1498": {
        "tactic": "TA0004",
        "rules": [
          "AWS.WAF.Disassociation",
          "Okta.Rate.Limits"
        ]
      },
      "T1486": {
        "tactic": "TA0040",
        "rules": [
          "AWS.EC2.EBS.Encryption.Disabled",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1565": {
        "tactic": "TA0040",
        "rules": [
          "AWS.EC2.EBS.Encryption.Disabled",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1580": {
        "tactic": "TA0007",
        "rules": [
          "AWS.EC2.DownloadInstanceUserData"
        ]
      },
      "T1525": {
        "tactic": "TA0005",
        "rules": [
          "AWS.ECR.CRUD",
          "AWS.LAMBDA.CRUD"
        ]
      },
      "T1518": {
        "tactic": "TA0007",
        "rules": [
          "AWS.Software.Discovery",
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1621": {
        "tactic": "TA0006",
        "rules": [
          "AWS.Unsuccessful.MFA.attempt"
        ]
      },
      "T1666": {
        "tactic": "TA0005",
        "rules": [
          "AWS.CloudTrail.AttemptToLeaveOrg"
        ]
      },
      "T1578": {
        "tactic": "TA0005",
        "rules": [
          "AWS.Modify.Cloud.Compute.Infrastructure"
        ]
      },
      "T1610": {
        "tactic": "TA0002",
        "rules": [
          "AWS.EC2.LaunchUnusualEC2Instances",
          "GCP.K8s.New.Daemonset.Deployed",
          "GCP.K8s.Pod.Using.Host.PID.Namespace"
        ]
      },
      "T1203": {
        "tactic": "TA0002",
        "rules": [
          "AWS.SSM.DistributedCommand"
        ]
      },
      "T1070": {
        "tactic": "TA0005",
        "rules": [
          "Crowdstrike.UserDeleted",
          "Crowdstrike.API.Key.Deleted",
          "Slack.AuditLogs.DLPModified"
        ]
      },
      "T1586": {
        "tactic": "TA0042",
        "rules": [
          "Azure.Audit.RoleChangedPIM"
        ]
      },
      "T1619": {
        "tactic": "TA0007",
        "rules": [
          "AWS.S3.ServerAccess.Error"
        ]
      },
      "T1199": {
        "tactic": "TA0001",
        "rules": [
          "AppOmni.Alert.Passthrough",
          "Okta.Support.Reset",
          "Okta.Support.Access",
          "Okta.Identity.Provider.Created.Modified",
          "Okta.Identity.Provider.SignIn"
        ]
      },
      "T1090": {
        "tactic": "TA0005",
        "rules": [
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1564": {
        "tactic": "TA0005",
        "rules": [
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1111": {
        "tactic": "TA0006",
        "rules": [
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1539": {
        "tactic": "TA0006",
        "rules": [
          "AppOmni.Alert.Passthrough",
          "Okta.PotentiallyStolenSession"
        ]
      },
      "T1484": {
        "tactic": "TA0004",
        "rules": [
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1608": {
        "tactic": "TA0042",
        "rules": [
          "AppOmni.Alert.Passthrough"
        ]
      },
      "T1571": {
        "tactic": "TA0011",
        "rules": [
          "AWS.VPC.InboundPortWhitelist",
          "AWS.VPC.InboundPortBlacklist"
        ]
      },
      "T1071": {
        "tactic": "TA0011",
        "rules": [
          "AWS.VPC.UnapprovedOutboundDNS",
          "Slack.AuditLogs.PassthroughAnomaly"
        ]
      },
      "T1021.004": {
        "tactic": "TA0008",
        "rules": [
          "AWS.VPC.SSHAllowedSignal"
        ]
      },
      "T1496": {
        "tactic": "TA0040",
        "rules": [
          "AWS.DNS.Crypto.Domain"
        ]
      },
      "T1222": {
        "tactic": "TA0005",
        "rules": [
          "Slack.AuditLogs.PrivateChannelMadePublic",
          "Slack.AuditLogs.ServiceOwnerTransferred"
        ]
      },
      "T1556.006": {
        "tactic": "TA0005",
        "rules": [
          "Slack.AuditLogs.MFASettingsChanged"
        ]
      },
      "T1566.001": {
        "tactic": "TA0001",
        "rules": [
          "Slack.AuditLogs.PotentiallyMaliciousFileShared"
        ]
      },
      "T1489": {
        "tactic": "TA0040",
        "rules": [
          "Slack.AuditLogs.EKMSlackbotUnenrolled",
          "Slack.AuditLogs.AppRemoved"
        ]
      },
      "T1600": {
        "tactic": "TA0005",
        "rules": [
          "Slack.AuditLogs.EKMUnenrolled"
        ]
      },
      "T1505": {
        "tactic": "TA0003",
        "rules": [
          "Slack.AuditLogs.AppAdded"
        ]
      },
      "T1499.003": {
        "tactic": "TA0040",
        "rules": [
          "Slack.AuditLogs.ApplicationDoS"
        ]
      },
      "T1021": {
        "tactic": "TA0008",
        "rules": [
          "Osquery.SSHListener"
        ]
      },
      "T1176": {
        "tactic": "TA0003",
        "rules": [
          "Osquery.Mac.UnwantedChromeExtensions"
        ]
      },
      "T1056": {
        "tactic": "TA0009",
        "rules": [
          "Osquery.Mac.OSXAttacksKeyboardEvents"
        ]
      },
      "T1588": {
        "tactic": "TA0042",
        "rules": [
          "Osquery.Mac.OSXAttacks"
        ]
      },
      "T1014": {
        "tactic": "TA0005",
        "rules": [
          "Osquery.OSSECRootkitDetected"
        ]
      },
      "T1611": {
        "tactic": "TA0004",
        "rules": [
          "GCP.K8S.Pod.Create.Or.Modify.Host.Path.Volume.Mount",
          "GCP.K8s.Pod.Attached.To.Node.Host.Network",
          "GCP.K8s.Pod.Using.Host.PID.Namespace"
        ]
      },
      "T1053.003": {
        "tactic": "TA0003",
        "rules": [
          "GCP.GKE.Kubernetes.Cron.Job.Created.Or.Modified"
        ]
      },
      "T1573.002": {
        "tactic": "TA0011",
        "rules": [
          "GCP.K8s.IOC.Activity"
        ]
      },
      "T1654": {
        "tactic": "TA0007",
        "rules": [
          "ZIA.Logs.Downloaded"
        ]
      }
    },
    "rules_by_mitre": {
      "Standard.ImpossibleTravel.Login": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "standard_rules"
      },
      "Standard.BruteForceByUser": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "standard_rules"
      },
      "Standard.MFADisabled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "standard_rules"
      },
      "Standard.BruteForceByIP": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "standard_rules"
      },
      "Standard.AdminRoleAssigned": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "standard_rules"
      },
      "Standard.SignInFromRogueState": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078.004"
        ],
        "source_path": "standard_rules"
      },
      "Standard.MaliciousSSODNSLookup": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1566"
        ],
        "source_path": "standard_rules"
      },
      "Zendesk.UserSuspension": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "zendesk_rules"
      },
      "Zendesk.AccountOwnerChanged": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "zendesk_rules"
      },
      "Zendesk.MobileAppAccessUpdated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "zendesk_rules"
      },
      "Zendesk.SensitiveDataRedactionOff": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1213"
        ],
        "source_path": "zendesk_rules"
      },
      "Zendesk.NewAPIToken": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1528"
        ],
        "source_path": "zendesk_rules"
      },
      "Zendesk.UserAssumption": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1550"
        ],
        "source_path": "zendesk_rules"
      },
      "Netskope.AdminLoggedOutLoginFailures": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "netskope_rules"
      },
      "Netskope.AdminUserChange": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "netskope_rules"
      },
      "Netskope.ManyDeletes": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1485"
        ],
        "source_path": "netskope_rules"
      },
      "Netskope.NetskopePersonnelActivity": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195"
        ],
        "source_path": "netskope_rules"
      },
      "Netskope.UnauthorizedAPICalls": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "netskope_rules"
      },
      "MongoDB.org.Membership.Restriction.Disabled": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1556.009"
        ],
        "source_path": "mongodb_rules"
      },
      "MongoDB.Alerting.Disabled.Or.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "mongodb_rules"
      },
      "MongoDB.Access.Allowed.From.Anywhere": {
        "tactics": [
          "TA0008",
          "TA0003"
        ],
        "techniques": [
          "T1556.009",
          "T1021.007"
        ],
        "source_path": "mongodb_rules"
      },
      "GitHub.User.RoleUpdated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Branch.PolicyOverride": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Org.AuthChange": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Org.IpAllowlist": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Branch.ProtectionDisabled": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Repo.RulesetModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "github_rules"
      },
      "Github.Repo.CollaboratorChange": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Team.Modified": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Webhook.Modified": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1020"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Repo.HookModified": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1020"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Secret.Scanning.Alert.Created": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Advanced.Security.Change": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "github_rules"
      },
      "GitHub.Org.Modified": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195"
        ],
        "source_path": "github_rules"
      },
      "Github.Repo.VisibilityChange": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "github_rules"
      },
      "GitHub.User.AccessKeyCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "github_rules"
      },
      "Teleport.CompanyDomainLoginWithoutSAML": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.SAMLLoginWithoutCompanyDomain": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.SuspiciousCommands": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1059"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.AuthErrors": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.CreateUserAccounts": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.SAMLCreated": {
        "tactics": [
          "TA0042"
        ],
        "techniques": [
          "T1585"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.RootLogin": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1059"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.LongLivedCerts": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.ScheduledJobs": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1053"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.RoleCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098.001"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.LocalUserLoginWithoutMFA": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Teleport.NetworkScanning": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1046"
        ],
        "source_path": "gravitational_teleport_rules"
      },
      "Amazon.EKS.AnonymousAPIAccess": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1190"
        ],
        "source_path": "aws_eks_rules"
      },
      "Amazon.EKS.Audit.SystemNamespaceFromPublicIP": {
        "tactics": [
          "TA0027"
        ],
        "techniques": [
          "T1475"
        ],
        "source_path": "aws_eks_rules"
      },
      "Amazon.EKS.Audit.Multiple403": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1613"
        ],
        "source_path": "aws_eks_rules"
      },
      "OneLogin.ThresholdAccountsDeleted": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.PasswordAccess": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.AuthFactorRemoved": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.ThresholdAccountsModified": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.UserAccountLocked": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.UserAssumption": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1550"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.UnauthorizedAccess": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1550"
        ],
        "source_path": "onelogin_rules"
      },
      "OneLogin.ActiveLoginActivity": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1550"
        ],
        "source_path": "onelogin_rules"
      },
      "Box.Item.Shared.Externally": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "box_rules"
      },
      "Box.Malicious.Content": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1204"
        ],
        "source_path": "box_rules"
      },
      "Box.Event.Triggered.Externally": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "box_rules"
      },
      "Box.Shield.Suspicious.Alert": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "box_rules"
      },
      "Box.New.Login": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "box_rules"
      },
      "Box.Shield.Anomalous.Download": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "box_rules"
      },
      "Box.Untrusted.Device": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "box_rules"
      },
      "Box.Large.Number.Permission.Updates": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "box_rules"
      },
      "Box.Large.Number.Downloads": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "box_rules"
      },
      "OnePassword.Unusual.Client": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1555"
        ],
        "source_path": "onepassword_rules"
      },
      "OnePassword.Lut.Sensitive.Item": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "onepassword_rules"
      },
      "OnePassword.Sensitive.Item": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "onepassword_rules"
      },
      "Zoom.PasscodeDisabled": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1125"
        ],
        "source_path": "zoom_operation_rules"
      },
      "Sublime.Message.Source.Deleted.Or.Deactivated": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "sublime_rules"
      },
      "Sublime.Mailbox.Deactivated": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "sublime_rules"
      },
      "Sublime.Rules.Deleted.Or.Deactivated": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "sublime_rules"
      },
      "Panther.SAML.Modified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "panther_audit_rules"
      },
      "Panther.User.Modified": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "panther_audit_rules"
      },
      "Panther.Detection.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "panther_audit_rules"
      },
      "Panther.Sensitive.Role": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "panther_audit_rules"
      },
      "Microsoft365.MFA.Disabled": {
        "tactics": [
          "TA003",
          "TA006",
          "TA005"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "microsoft_rules"
      },
      "Microsoft365.Exchange.External.Forwarding": {
        "tactics": [
          "TA0010",
          "TA0003",
          "TA0009"
        ],
        "techniques": [
          "T1020",
          "T1114.003",
          "T1137.005"
        ],
        "source_path": "microsoft_rules"
      },
      "Microsoft365.Brute.Force.Login.by.User": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "microsoft_rules"
      },
      "Microsoft365.External.Document.Sharing": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1039"
        ],
        "source_path": "microsoft_rules"
      },
      "GCP.GCS.Public": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1530"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Inbound.SSO.Profile.Created": {
        "tactics": [
          "TA0003",
          "TA0004"
        ],
        "techniques": [
          "T1136.003",
          "T1098.003"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.iam.serviceAccountKeys.create": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.UnusedRegions": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1535"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Cloudfunctions.Functions.Update": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.IAM.serviceAccounts.signBlob": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Storage.Hmac.Keys.Create": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Cloudfunctions.Functions.Create": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.IAM.CustomRoleChanges": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.compute.instances.create.Privilege.Escalation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.User.Added.To.Privileged.Group": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078.004",
          "T1484.001"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Privilege.Escalation.By.Deployments.Create": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.CloudBuild.Potential.Privilege.Escalation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.IAM.serviceAccounts.signJwt.Privilege.Escalation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.GCS.IAMChanges": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1530"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.IAM.CorporateEmail": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.serviceusage.apiKeys.create.Privilege.Escalation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Workload.Identity.Pool.Created.or.Updated": {
        "tactics": [
          "TA0003",
          "TA0004"
        ],
        "techniques": [
          "T1136.003",
          "T1098.003"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.IAM.OrgFolderIAMChanges": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1556.009"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.Workforce.Pool.Created.or.Updated": {
        "tactics": [
          "TA0003",
          "TA0004"
        ],
        "techniques": [
          "T1136.003",
          "T1098.003"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GCP.IAM.serviceAccounts.getAccessToken.Privilege.Escalation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_audit_rules"
      },
      "GSuite.Drive.ExternalFileShare": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1213"
        ],
        "source_path": "gsuite_reports_rules"
      },
      "GSuite.DriveOverlyVisible": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1213"
        ],
        "source_path": "gsuite_reports_rules"
      },
      "GSuite.DriveVisibilityChanged": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1213"
        ],
        "source_path": "gsuite_reports_rules"
      },
      "Standard.NewUserAccountCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "indicator_creation_rules"
      },
      "Standard.NewAWSAccountCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "indicator_creation_rules"
      },
      "GSuite.DeviceUnlockFailure": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.GmailDefaultRoutingRuleModified": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.DocOwnershipTransfer": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1213"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.PasswordEnforceStrongDisabled": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "Google.Workspace.ManyDocsDownloaded": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.ExternalMailForwarding": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1114"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.LoginType": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.CalendarMadePublic": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1087"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.AdvancedProtection": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.PasswordReuseEnabled": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.TrustedDomainsAllowlist": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.GmailSecuritySandboxDisabled": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1566"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.TwoStepVerification": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.LeakedPassword": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.CalendarExternalSharingSetting": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1087"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "GSuite.Workspace.GmailPredeliveryScanningDisabled": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1566"
        ],
        "source_path": "gsuite_activityevent_rules"
      },
      "Wiz.Update.IP.Restrictions": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1556.009"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Rotate.Service.Account.Secret": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078.004"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Update.Support.Contact.List": {
        "tactics": [
          "TA0035"
        ],
        "techniques": [
          "T1636.003"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Rule.Change": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.CICD.Scan.Policy.Updated.Or.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Revoke.User.Sessions": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Update.Login.Settings": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Update.Scanner.Settings": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Image.Integrity.Validator.Updated.Or.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Connector.Updated.Or.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.SAML.Identity.Provider.Change": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1484.002"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Data.Classifier.Updated.Or.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.User.Created.Or.Deleted": {
        "tactics": [
          "TA0003",
          "TA0005"
        ],
        "techniques": [
          "T1136.003",
          "T1070.009"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.User.Role.Updated.Or.Deleted": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Integration.Updated.Or.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "wiz_rules"
      },
      "Wiz.Service.Account.Change": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078.004"
        ],
        "source_path": "wiz_rules"
      },
      "AWS.BedrockModelInvocation.AbnormalTokenUsage": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1496.004"
        ],
        "source_path": "aws_bedrockmodelinvocation_rules"
      },
      "AWS.BedrockModelInvocation.GuardRailIntervened": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T0018.000"
        ],
        "source_path": "aws_bedrockmodelinvocation_rules"
      },
      "Snowflake.Stream.FileDownloaded": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1041"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.PublicRoleGrant": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078.001"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.BruteForceByUsername": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.LoginWithoutMFA": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.UserCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.TableCopiedIntoStage": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1041"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.AccountAdminGranted": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.TempStageCreated": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1041"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.ExternalShares": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1537"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.UserEnabled": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "snowflake_rules"
      },
      "Snowflake.Stream.BruteForceByIp": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "snowflake_rules"
      },
      "AWS.RDS.MasterPasswordUpdated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.AMIModifiedForPublicAccess": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1537"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.RDS.ManualSnapshotCreated": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1537"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.UnusedRegion": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1535"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.RouteTableModified": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1048"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.Vulnerable.XZ.Image.Launched": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195.001"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SecretsManager.BatchRetrieveSecrets": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SecretsManager.RetrieveSecretsMultiRegion": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.S3.BucketPolicyModified": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.GatewayModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.Account.Discovery": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1087"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Macie.Evasion": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.AttachAdminRolePolicy": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.IAMCompromisedKeyQuarantine": {
        "tactics": [
          "TA0001",
          "TA0006"
        ],
        "techniques": [
          "T1552.001",
          "T1078.004"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.BackdoorRole": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.CodebuildProjectMadePublic": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1567"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Potential.Backdoor.Lambda": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Lambda.UpdateFunctionConfiguration": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.ConfigService.DisabledDeleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.Created": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1538"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Console.RootLoginFailed": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.MultiInstanceConnect": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1021.005"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.IAMAssumeRoleBlacklistIgnored": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.KMS.CustomerManagedKeyLoss": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1485"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.Password.Policy.Discovery": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1201"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Console.LoginWithoutMFA": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.Stopped": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.IAMEntityCreatedWithoutCloudFormation": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.ManyPasswordReadAttempts": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1555"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.EventSelectorsDisabled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.SecurityConfigurationChange": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Console.RootLogin": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.AttachAdminUserPolicy": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.PolicyModified": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.DNSLogsDeleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.Backdoor.User.Keys": {
        "tactics": [
          "TA0008",
          "TA0003",
          "TA0005"
        ],
        "techniques": [
          "T1550",
          "T1098",
          "T1108"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.LoginProfileCreatedOrModified": {
        "tactics": [
          "TA0008",
          "TA0003",
          "TA0005"
        ],
        "techniques": [
          "T1550",
          "T1098",
          "T1108"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IPSet.Modified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.ShortLifecycle": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.VPCE.AccessDenied": {
        "tactics": [
          "TA0007",
          "TA0005"
        ],
        "techniques": [
          "T1599",
          "T1526"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SecretsManager.RetrieveSecrets": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.RDS.PublicRestore": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1020"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.Startup.Script.Change": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1059"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Bedrock.DeleteModelInvocationLoggingConfiguration": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.003"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SSM.DecryptSSMParams": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1555"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.EnableRegion": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1535"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.WAF.Disassociation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1498"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.EBS.Encryption.Disabled": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1565",
          "T1486"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.RootPasswordChanged": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.CreateRole": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.CreateUser": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.ConfigService.Created": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1526"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Lambda.UpdateFunctionCode": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.NetworkACLModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.DownloadInstanceUserData": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1580"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.VPCFlow.LogsDeleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.AccessKeyCompromised": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.NetworkACLPermissiveEntry": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.ECR.CRUD": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1525"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Software.Discovery": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1518"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.ManualSecurityGroupChange": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SecretsManager.BatchRetrieveSecretsCatchAll": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Unsuccessful.MFA.attempt": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1621"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Console.LoginWithoutSAML": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAMUser.ReconAccessDenied": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1526"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.SnapshotMadePublic": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1537"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.RootAccessKeyCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.Monitoring": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1204"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SecurityHub.Finding.Evasion": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.SecurityGroupModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.VPCModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Bedrock.GuardrailUpdateDelete": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.AttemptToLeaveOrg": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1666",
          "T1562.008"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.VPCE.SensitiveAPICalls": {
        "tactics": [
          "TA0007",
          "TA0003",
          "TA0005"
        ],
        "techniques": [
          "T1562",
          "T1599",
          "T1098",
          "T1526"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.S3.BucketDeleted": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1485"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.ECR.EVENTS": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1535"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.User.Login.Profile.Modified": {
        "tactics": [
          "TA0008",
          "TA0003",
          "TA0005"
        ],
        "techniques": [
          "T1550",
          "T1098",
          "T1108"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.RDS.SnapshotShared": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1537"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Modify.Cloud.Compute.Infrastructure": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1578"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.UnauthorizedAPICall": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1526"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.VPCE.ExternalPrincipal": {
        "tactics": [
          "TA0010",
          "TA0007",
          "TA0005"
        ],
        "techniques": [
          "T1599",
          "T1048",
          "T1526"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.IAM.CredentialsUpdated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.Root.Activity": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.EC2.LaunchUnusualEC2Instances": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1610"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.SSM.DistributedCommand": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1203"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.CloudTrail.ResourceMadePublic": {
        "tactics": [
          "TA0010"
        ],
        "techniques": [
          "T1537"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "AWS.LAMBDA.CRUD": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1525"
        ],
        "source_path": "aws_cloudtrail_rules"
      },
      "Crowdstrike.DNS.Request": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1566"
        ],
        "source_path": "crowdstrike_rules"
      },
      "Crowdstrike.UserDeleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1070"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.API.Key.Created": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1098.001"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.AllowlistRemoved": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.AdminRoleAssigned": {
        "tactics": [
          "TA0003",
          "TA0004"
        ],
        "techniques": [
          "T1098.003"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.SingleIpAllowlisted": {
        "tactics": [
          "TA0003",
          "TA0006",
          "TA0005"
        ],
        "techniques": [
          "T1556.009"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.NewUserCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136.003"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.API.Key.Deleted": {
        "tactics": [
          "TA0040",
          "TA0005"
        ],
        "techniques": [
          "T1531",
          "T1070"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.UserPasswordChange": {
        "tactics": [
          "TA0003",
          "TA0004"
        ],
        "techniques": [
          "T1098.001"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Crowdstrike.IpAllowlistChanged": {
        "tactics": [
          "TA0003",
          "TA0006",
          "TA0005"
        ],
        "techniques": [
          "T1556.009"
        ],
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      "Azure.Audit.MFADisabled": {
        "tactics": [
          "TA0001",
          "TA0005"
        ],
        "techniques": [
          "T1556",
          "T1078"
        ],
        "source_path": "azure_signin_rules"
      },
      "Azure.Audit.RoleChangedPIM": {
        "tactics": [
          "TA0042"
        ],
        "techniques": [
          "T1586"
        ],
        "source_path": "azure_signin_rules"
      },
      "Azure.Audit.RiskLevelPassthrough": {
        "tactics": [
          "TA0001",
          "TA0006"
        ],
        "techniques": [
          "T1078",
          "T1110"
        ],
        "source_path": "azure_signin_rules"
      },
      "Azure.Audit.ManyFailedSignIns": {
        "tactics": [
          "TA0001",
          "TA0006"
        ],
        "techniques": [
          "T1078",
          "T1110"
        ],
        "source_path": "azure_signin_rules"
      },
      "Azure.Audit.PolicyChanged": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1526"
        ],
        "source_path": "azure_signin_rules"
      },
      "Azure.Audit.InviteExternalUsers": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "azure_signin_rules"
      },
      "AWS.S3.ServerAccess.Unauthenticated": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1530"
        ],
        "source_path": "aws_s3_rules"
      },
      "AWS.S3.ServerAccess.Error": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1619"
        ],
        "source_path": "aws_s3_rules"
      },
      "AWS.S3.ServerAccess.IPWhitelist": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1530"
        ],
        "source_path": "aws_s3_rules"
      },
      "AWS.S3.ServerAccess.UnknownRequester": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1530"
        ],
        "source_path": "aws_s3_rules"
      },
      "AWS.S3.ServerAccess.Insecure": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1530"
        ],
        "source_path": "aws_s3_rules"
      },
      "AppOmni.Alert.Passthrough": {
        "tactics": [
          "TA0004",
          "TA0006",
          "TA0040",
          "TA0009",
          "TA0007",
          "TA0003",
          "TA0005",
          "TA0002",
          "TA0042",
          "TA0010",
          "TA0008",
          "TA0001"
        ],
        "techniques": [
          "T1562",
          "T1114",
          "T1566",
          "T1608",
          "T1567",
          "T1531",
          "T1537",
          "T1556",
          "T1518",
          "T1528",
          "T1539",
          "T1078",
          "T1564",
          "T1550",
          "T1110",
          "T1213",
          "T1204",
          "T1136",
          "T1090",
          "T1548",
          "T1190",
          "T1552",
          "T1485",
          "T1111",
          "T1098",
          "T1199",
          "T1484",
          "T1530",
          "T1565",
          "T1087",
          "T1486"
        ],
        "source_path": "appomni_rules"
      },
      "AWS.VPC.InboundPortWhitelist": {
        "tactics": [
          "TA0011"
        ],
        "techniques": [
          "T1571"
        ],
        "source_path": "aws_vpc_flow_rules"
      },
      "AWS.VPC.UnapprovedOutboundDNS": {
        "tactics": [
          "TA0011"
        ],
        "techniques": [
          "T1071"
        ],
        "source_path": "aws_vpc_flow_rules"
      },
      "AWS.VPC.InboundPortBlacklist": {
        "tactics": [
          "TA0011"
        ],
        "techniques": [
          "T1571"
        ],
        "source_path": "aws_vpc_flow_rules"
      },
      "AWS.VPC.SSHAllowedSignal": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1021.004"
        ],
        "source_path": "aws_vpc_flow_rules"
      },
      "AWS.DNS.Crypto.Domain": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1496"
        ],
        "source_path": "aws_vpc_flow_rules"
      },
      "CarbonBlack.Audit.Data.Forwarder.Stopped": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "carbonblack_rules"
      },
      "CarbonBlack.Audit.API.Key.Created.Retrieved": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "carbonblack_rules"
      },
      "CarbonBlack.Audit.Admin.Grant": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "carbonblack_rules"
      },
      "CarbonBlack.Audit.Flagged": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1110"
        ],
        "source_path": "carbonblack_rules"
      },
      "CarbonBlack.Audit.User.Added.Outside.Org": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "carbonblack_rules"
      },
      "Slack.AuditLogs.LegalHoldPolicyModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.AppAccessExpanded": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1098"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.InformationBarrierModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.PassthroughAnomaly": {
        "tactics": [
          "TA0011"
        ],
        "techniques": [
          "T1071"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.UserPrivilegeEscalation": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1098.003"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.PrivateChannelMadePublic": {
        "tactics": [
          "TA0010",
          "TA0003",
          "TA0005"
        ],
        "techniques": [
          "T1098",
          "T1222",
          "T1567"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.OrgDeleted": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.MFASettingsChanged": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556.006"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.ServiceOwnerTransferred": {
        "tactics": [
          "TA0003",
          "TA0040",
          "TA0005"
        ],
        "techniques": [
          "T1531",
          "T1098",
          "T1222"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.PotentiallyMaliciousFileShared": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1566.001"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.EKMConfigChanged": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.EKMSlackbotUnenrolled": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1489"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.IntuneMDMDisabled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.EKMUnenrolled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1600"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.SSOSettingsChanged": {
        "tactics": [
          "TA0003",
          "TA0006"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.IDPConfigurationChanged": {
        "tactics": [
          "TA0003",
          "TA0006"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.OrgCreated": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.AppRemoved": {
        "tactics": [
          "TA0040",
          "TA0005"
        ],
        "techniques": [
          "T1489",
          "T1070.009"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.AppAdded": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1505"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.DLPModified": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.001",
          "T1070"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.ApplicationDoS": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1499.003"
        ],
        "source_path": "slack_rules"
      },
      "Slack.AuditLogs.UserPrivilegeChangedToUser": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "slack_rules"
      },
      "Osquery.SSHListener": {
        "tactics": [
          "TA0008"
        ],
        "techniques": [
          "T1021"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Mac.AutoUpdateEnabled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.SuspiciousCron": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1053"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Linux.LoginFromNonOffice": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Mac.ApplicationFirewallSettings": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Linux.Mac.VulnerableXZliblzma": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1195.001"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Mac.UnwantedChromeExtensions": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1176"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Mac.OSXAttacksKeyboardEvents": {
        "tactics": [
          "TA0009"
        ],
        "techniques": [
          "T1056"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Mac.OSXAttacks": {
        "tactics": [
          "TA0042"
        ],
        "techniques": [
          "T1588"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.OSSECRootkitDetected": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1014"
        ],
        "source_path": "osquery_rules"
      },
      "Osquery.Linux.AWSCommandExecuted": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1204"
        ],
        "source_path": "osquery_rules"
      },
      "GitLab.Production.Password.Reset.Multiple.Emails": {
        "tactics": [
          "TA0001",
          "TA0003"
        ],
        "techniques": [
          "T1190",
          "T1098",
          "T1195"
        ],
        "source_path": "gitlab_rules"
      },
      "GitLab.Audit.Password.Reset.Multiple.Emails": {
        "tactics": [
          "TA0001",
          "TA0003"
        ],
        "techniques": [
          "T1190",
          "T1098",
          "T1195"
        ],
        "source_path": "gitlab_rules"
      },
      "GCP.K8s.New.Daemonset.Deployed": {
        "tactics": [
          "TA0002"
        ],
        "techniques": [
          "T1610"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.K8S.Pod.Create.Or.Modify.Host.Path.Volume.Mount": {
        "tactics": [
          "TA0010",
          "TA0004"
        ],
        "techniques": [
          "T1611",
          "T1041"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.K8S.Privileged.Pod.Created": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1548"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.K8s.Pod.Attached.To.Node.Host.Network": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1611"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.GKE.Kubernetes.Cron.Job.Created.Or.Modified": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1053.003"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.K8s.Pod.Using.Host.PID.Namespace": {
        "tactics": [
          "TA0002",
          "TA0004"
        ],
        "techniques": [
          "T1611",
          "T1610"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.K8S.Service.Type.NodePort.Deployed": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1190"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "GCP.K8s.IOC.Activity": {
        "tactics": [
          "TA0011"
        ],
        "techniques": [
          "T1573.002"
        ],
        "source_path": "gcp_k8s_rules"
      },
      "Okta.Global.MFA.Disabled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "okta_rules"
      },
      "Okta.PotentiallyStolenSession": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1539"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Password.Extraction.via.SCIM": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Support.Reset": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1199"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Anonymizing.VPN.Login": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1556"
        ],
        "source_path": "okta_rules"
      },
      "Okta.AdminRoleAssigned": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1078"
        ],
        "source_path": "okta_rules"
      },
      "Okta.APIKeyCreated": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1528"
        ],
        "source_path": "okta_rules"
      },
      "Okta.New.Behavior.Accessing.Admin.Console": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1078.004"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Support.Access": {
        "tactics": [
          "TA0001"
        ],
        "techniques": [
          "T1199"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Rate.Limits": {
        "tactics": [
          "TA0006",
          "TA0040"
        ],
        "techniques": [
          "T1498",
          "T1110"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Org2org.Creation.Modification": {
        "tactics": [
          "TA0004",
          "TA0006"
        ],
        "techniques": [
          "T1556",
          "T1078.004"
        ],
        "source_path": "okta_rules"
      },
      "Okta.PasswordAccess": {
        "tactics": [
          "TA0006"
        ],
        "techniques": [
          "T1552"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Phishing.Attempt.Blocked.FastPass": {
        "tactics": [
          "TA0001",
          "TA0006",
          "TA0003"
        ],
        "techniques": [
          "T1556",
          "T1078.004",
          "T1566"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Identity.Provider.Created.Modified": {
        "tactics": [
          "TA0001",
          "TA0006",
          "TA0003"
        ],
        "techniques": [
          "T1556",
          "T1098",
          "T1199"
        ],
        "source_path": "okta_rules"
      },
      "Okta.Identity.Provider.SignIn": {
        "tactics": [
          "TA0001",
          "TA0003"
        ],
        "techniques": [
          "T1098",
          "T1199"
        ],
        "source_path": "okta_rules"
      },
      "ZIA.Account.Access.Removed": {
        "tactics": [
          "TA0040"
        ],
        "techniques": [
          "T1531"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Insecure.Password.Settings": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1556.009"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Backup.Deleted": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Logs.Downloaded": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1654"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Log.Streaming.Disabled": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Golden.Restore.Point.Dropped": {
        "tactics": [
          "TA0005"
        ],
        "techniques": [
          "T1562.008"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Cloud.Account.Created": {
        "tactics": [
          "TA0003"
        ],
        "techniques": [
          "T1136.003"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Additional.Cloud.Roles": {
        "tactics": [
          "TA0003",
          "TA0004"
        ],
        "techniques": [
          "T1098.003"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Password.Expiration": {
        "tactics": [
          "TA0007"
        ],
        "techniques": [
          "T1201"
        ],
        "source_path": "zscaler_rules/zia"
      },
      "ZIA.Trust.Modification": {
        "tactics": [
          "TA0004"
        ],
        "techniques": [
          "T1484.002"
        ],
        "source_path": "zscaler_rules/zia"
      }
    },
    "uncovered_rules": [
      {
        "rule_id": "Standard.DNSBase64",
        "source_path": "standard_rules"
      },
      {
        "rule_id": "Zendesk.UserRoleChanged",
        "source_path": "zendesk_rules"
      },
      {
        "rule_id": "Push.Security.New.App.Detected",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.Open.Security.Finding",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.Phishing.Attack",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.MFA.Method.Changed",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.Unauthorized.IdP.Login",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.Authorized.IdP.Login",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.App.Banner.Acknowledged",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.Phishable.MFA.Method",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Push.Security.New.SaaS.Account.Created",
        "source_path": "push_security_rules"
      },
      {
        "rule_id": "Auth0.MFA.Risk.Assessment.Disabled",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.Post.Login.Action.Flow",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.MFA.Policy.Enabled",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.MFA.Factor.Setting.Enabled",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.User.Joined.Tenant",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.CIC.Credential.Stuffing",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.MFA.Risk.Assessment.Enabled",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.Integration.Installed",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.User.Invitation.Created",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.Custom.Role.Created",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "Auth0.MFA.Policy.Disabled",
        "source_path": "auth0_rules"
      },
      {
        "rule_id": "MongoDB.User.Roles.Changed",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.Atlas.ApiKeyCreated",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.External.UserInvited.NoConfig",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.Identity.Provider.Activity",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.Logging.Toggled",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.2FA.Disabled",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.User.Created.Or.Deleted",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "MongoDB.External.UserInvited",
        "source_path": "mongodb_rules"
      },
      {
        "rule_id": "GitHub.Org.Moderators.Add",
        "source_path": "github_rules"
      },
      {
        "rule_id": "Github.Repo.VulnerabilityDismissed",
        "source_path": "github_rules"
      },
      {
        "rule_id": "Github.Public.Repository.Created",
        "source_path": "github_rules"
      },
      {
        "rule_id": "GitHub.Action.Failed",
        "source_path": "github_rules"
      },
      {
        "rule_id": "Github.Organization.App.Integration.Installed",
        "source_path": "github_rules"
      },
      {
        "rule_id": "Github.Repo.Created",
        "source_path": "github_rules"
      },
      {
        "rule_id": "GitHub.Repo.InitialAccess",
        "source_path": "github_rules"
      },
      {
        "rule_id": "Github.Repository.Transfer",
        "source_path": "github_rules"
      },
      {
        "rule_id": "Teleport.LockCreated",
        "source_path": "gravitational_teleport_rules"
      },
      {
        "rule_id": "Tracebit.Alert",
        "source_path": "tracebit_rules"
      },
      {
        "rule_id": "GCP.Access.Attempts.Violating.IAP.Access.Controls",
        "source_path": "gcp_http_lb_rules"
      },
      {
        "rule_id": "OneLogin.HighRiskFailedLogin",
        "source_path": "onelogin_rules"
      },
      {
        "rule_id": "OneLogin.Login",
        "source_path": "onelogin_rules"
      },
      {
        "rule_id": "OneLogin.PasswordChanged",
        "source_path": "onelogin_rules"
      },
      {
        "rule_id": "Box.Content.Workflow.Policy.Violation",
        "source_path": "box_rules"
      },
      {
        "rule_id": "Box.Access.Granted",
        "source_path": "box_rules"
      },
      {
        "rule_id": "Zoom.User.Promoted.to.Privileged.Role",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "Zoom.Sign.In.Requirements.Changed",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "Zoom.Sign.In.Method.Modified",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "Zoom.Two.Factor.Authentication.Disabled",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "Zoom.All.Meetings.Secured.With.One.Option.Disabled",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "Zoom.New.Meeting.Passcode.Required.Disabled",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "Zoom.Automatic.Sign.Out.Disabled",
        "source_path": "zoom_operation_rules"
      },
      {
        "rule_id": "SentinelOne.Alert.Passthrough",
        "source_path": "sentinelone_rules"
      },
      {
        "rule_id": "SentinelOne.Threats",
        "source_path": "sentinelone_rules"
      },
      {
        "rule_id": "Sublime.Message.Flagged",
        "source_path": "sublime_rules"
      },
      {
        "rule_id": "Decoy.DynamoDB.Accessed",
        "source_path": "aws_securityfinding_rules"
      },
      {
        "rule_id": "Decoy.S3.Accessed",
        "source_path": "aws_securityfinding_rules"
      },
      {
        "rule_id": "Decoy.Secret.Accessed",
        "source_path": "aws_securityfinding_rules"
      },
      {
        "rule_id": "Decoy.Systems.Manager.Parameter.Accessed",
        "source_path": "aws_securityfinding_rules"
      },
      {
        "rule_id": "Decoy.IAM.Assumed",
        "source_path": "aws_securityfinding_rules"
      },
      {
        "rule_id": "Duo.Admin.Create.Admin",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.Bypass.Code.Viewed",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.Bypass.Code.Created",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "DUO.User.Action.Fraudulent",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "DUO.User.Denied.AnomalousPush",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.User.MFA.Bypass.Enabled",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.Lockout",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.Policy.Updated",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "DUO.Admin.Action.MarkedFraudulent",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.SSO.SAML.Requirement.Disabled",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.New.Admin.API.App.Integration",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.App.Integration.Secret.Key.Viewed",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "DUO.User.BypassCode.Used",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Duo.Admin.MFA.Restrictions.Updated",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "DUO.User.Endpoint.Failure",
        "source_path": "duo_rules"
      },
      {
        "rule_id": "Microsoft.Graph.Passthrough",
        "source_path": "microsoft_rules"
      },
      {
        "rule_id": "GCP.Project.ExternalUserOwnershipInvite",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.DNS.Zone.Modified.or.Deleted",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Permissions.Granted.to.Create.or.Manage.Service.Account.Key",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Cloud.Run.Set.IAM.Policy",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Cloud.Storage.Buckets.Modified.Or.Deleted",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Compute.Snapshot.UnexpectedDomain",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Compute.IAM.Policy.Update",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Tag.Binding.Creation",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.IAM.Tag.Enumeration",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Privileged.Operation",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Access.Attempts.Violating.VPC.Service.Controls",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.BigQuery.Large.Scan",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Cloud.Run.Service.Created",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Firewall.Rule.Created",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.User.Added.to.IAP.Protected.Service",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Logging.Sink.Modified",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Destructive.Queries",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.iam.roles.update.Privilege.Escalation",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.SQL.ConfigChanges",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Service.Account.Access.Denied",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Compute.SSHConnection",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Service.Account.or.Keys.Created",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.VPC.Flow.Logs.Disabled",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Logging.Settings.Modified",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Firewall.Rule.Deleted",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Firewall.Rule.Modified",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "GCP.Log.Bucket.Or.Sink.Deleted",
        "source_path": "gcp_audit_rules"
      },
      {
        "rule_id": "Notion.LoginFromBlockedIP",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.LoginFromNewLocation",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.AccountChange",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.SAML.SSO.Configuration.Changed",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Workspace.Public.Page.Added",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.PagePerms.APIPermsChanged",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Workspace.SCIM.Token.Generated",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.SharingSettingsUpdated",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.TeamspaceOwnerAdded",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.PagePerms.GuestPermsChanged",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Workspace.Exported",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Many.Pages.Exported",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Login",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.PageSharedToWeb",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Audit.Log.Exported",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Notion.Many.Pages.Deleted",
        "source_path": "notion_rules"
      },
      {
        "rule_id": "Tailscale.Machine.Approval.Requirements.Disabled",
        "source_path": "tailscale_rules"
      },
      {
        "rule_id": "Tailscale.Magic.DNS.Disabled",
        "source_path": "tailscale_rules"
      },
      {
        "rule_id": "Tailscale.HTTPS.Disabled",
        "source_path": "tailscale_rules"
      },
      {
        "rule_id": "Cloudflare.Firewall.L7DDoS",
        "source_path": "cloudflare_rules"
      },
      {
        "rule_id": "Cloudflare.HttpRequest.BotHighVolume",
        "source_path": "cloudflare_rules"
      },
      {
        "rule_id": "Dropbox.External.Share",
        "source_path": "dropbox_rules"
      },
      {
        "rule_id": "Dropbox.Admin.sign.in.as.Session",
        "source_path": "dropbox_rules"
      },
      {
        "rule_id": "Dropbox.User.Disabled.2FA",
        "source_path": "dropbox_rules"
      },
      {
        "rule_id": "Dropbox.Linked.Team.Application.Added",
        "source_path": "dropbox_rules"
      },
      {
        "rule_id": "Dropbox.Ownership.Transfer",
        "source_path": "dropbox_rules"
      },
      {
        "rule_id": "GSuite.SuspiciousLogins",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "Google.Workspace.Apps.New.Mobile.App.Installed",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.GovernmentBackedAttack",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "Google.Workspace.Admin.Custom.Role",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.GoogleAccess",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.Rule",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.GroupBannedUser",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "Google.Workspace.Apps.Marketplace.Allowlist",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.DeviceSuspiciousActivity",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "Google.Workspace.Advanced.Protection.Program",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.UserSuspended",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.Workspace.DataExportCreated",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.IsSuspiciousTag",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "GSuite.DeviceCompromise",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "Google.Workspace.Apps.Marketplace.New.Domain.Application",
        "source_path": "gsuite_activityevent_rules"
      },
      {
        "rule_id": "Wiz.Alert.Passthrough",
        "source_path": "wiz_rules"
      },
      {
        "rule_id": "Salesforce.Admin.Login.As.User",
        "source_path": "salesforce_rules"
      },
      {
        "rule_id": "AWS.GuardDuty.CriticalSeverityFinding",
        "source_path": "aws_guardduty_rules"
      },
      {
        "rule_id": "AWS.GuardDuty.MediumSeverityFinding",
        "source_path": "aws_guardduty_rules"
      },
      {
        "rule_id": "AWS.GuardDuty.HighSeverityFinding",
        "source_path": "aws_guardduty_rules"
      },
      {
        "rule_id": "AWS.GuardDuty.LowSeverityFinding",
        "source_path": "aws_guardduty_rules"
      },
      {
        "rule_id": "Snowflake.Stream.LoginSuccess",
        "source_path": "snowflake_rules"
      },
      {
        "rule_id": "AWS.Console.Login",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.SES.CheckIdentityVerifications",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "Role.Assumed.by.User",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.IAM.Group.Read.Only.Events",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "Retrieve.SSO.access.token",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.S3.DeleteObjects",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.SES.CheckSESSendingEnabled",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.S3.DeleteObject",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.IAMAnythingChanged",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.EC2.Traffic.Mirroring",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.Suspicious.SAML.Activity",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "Sign-in.with.AWS.CLI.prompt",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.UserAccessKeyAuth",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.SES.CheckSendQuota",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "Role.Assumed.by.AWS.Service",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.EC2.StopInstances",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.S3.CopyObjectWithClientSideEncryption",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.Console.Sign-In",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.SES.ListIdentities",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "AWS.CloudTrail.VPCE.S3ExternalIP",
        "source_path": "aws_cloudtrail_rules"
      },
      {
        "rule_id": "Orca.Passthrough",
        "source_path": "orca_rules"
      },
      {
        "rule_id": "Crowdstrike.Macos.Osascript.Administrator",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.RealTimeResponse.Session",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Macos.Plutil.Usage",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Macos.Add.Trusted.Cert",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Connection.to.Embargoed.Country",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Detection.passthrough",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Unusual.Parent.Child.Processes",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Remote.Access.Tool.Execution",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Reverse.Shell.Tool.Executed",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Credential.Dumping.Tool",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Cryptomining.Tools",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.FDR.LOLBAS",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Systemlog.Tampering",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.WMI.Query.Detection",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.Base64EncodedArgs",
        "source_path": "crowdstrike_rules"
      },
      {
        "rule_id": "Crowdstrike.EppDetectionSummary",
        "source_path": "crowdstrike_rules/event_stream_rules"
      },
      {
        "rule_id": "Azure.Audit.LegacyAuth",
        "source_path": "azure_signin_rules"
      },
      {
        "rule_id": "AWS.VPC.HealthyLogStatus",
        "source_path": "aws_vpc_flow_rules"
      },
      {
        "rule_id": "CiscoUmbrella.DNS.Suspicious",
        "source_path": "cisco_umbrella_dns_rules"
      },
      {
        "rule_id": "CiscoUmbrella.DNS.FuzzyMatching",
        "source_path": "cisco_umbrella_dns_rules"
      },
      {
        "rule_id": "CiscoUmbrella.DNS.Blocked",
        "source_path": "cisco_umbrella_dns_rules"
      },
      {
        "rule_id": "CarbonBlack.AlertV2.Passthrough",
        "source_path": "carbonblack_rules"
      },
      {
        "rule_id": "Atlassian.User.LoggedInAsUser",
        "source_path": "atlassian_rules"
      },
      {
        "rule_id": "Osquery.UnsupportedMacOS",
        "source_path": "osquery_rules"
      },
      {
        "rule_id": "Osquery.OutdatedAgent",
        "source_path": "osquery_rules"
      },
      {
        "rule_id": "GCP.K8s.ExecIntoPod",
        "source_path": "gcp_k8s_rules"
      },
      {
        "rule_id": "Asana.Workspace.Require.App.Approvals.Disabled",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Team.Privacy.Public",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.New.Admin",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Service.Account.Created",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.Form.Link.Auth.Requirement.Disabled",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.Password.Requirements.Simple",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.SAML.Optional",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.Default.Session.Duration.Never",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.Guest.Invite.Permissions.Anyone",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.Email.Domain.Added",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Asana.Workspace.Org.Export",
        "source_path": "asana_rules"
      },
      {
        "rule_id": "Okta.Refresh.Access.Token.Reuse",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.APIKeyRevoked",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.User.MFA.Reset.All",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.User.Account.Locked",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.User.MFA.Factor.Suspend",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.App.Unauthorized.Access.Attempt",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.User.Reported.Suspicious.Activity",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.User.MFA.Reset.Single",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.Group.Admin.Role.Assigned",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.SSO.to.AWS",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.ThreatInsight.Security.Threat.Detected",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.Login.Success",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Okta.Login.Without.Push.Marker",
        "source_path": "okta_rules"
      },
      {
        "rule_id": "Thinkst.CanaryIncident",
        "source_path": "thinkstcanary_rules"
      },
      {
        "rule_id": "Thinkst.CanaryTokenIncident",
        "source_path": "thinkstcanary_rules"
      },
      {
        "rule_id": "Thinkst.CanaryDCRC",
        "source_path": "thinkstcanary_rules"
      },
      {
        "rule_id": "Tines.Team.Destruction",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Story.Items.Destruction",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Actions.DisabledChanges",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Enqueued.Retrying.Job.Destruction",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.SSO.Settings",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Story.Jobs.Clearance",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Custom.CertificateAuthority",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Global.Resource.Destruction",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Tines.Tenant.AuthToken",
        "source_path": "tines_rules"
      },
      {
        "rule_id": "Snyk.ServiceAccount.Change",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.Role.Change",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.Project.Settings",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.Org.Settings",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.OU.Change",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.System.PolicySetting",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.System.SSO",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.User.Management",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.Misc.Settings",
        "source_path": "snyk_rules"
      },
      {
        "rule_id": "Snyk.System.ExternalAccess",
        "source_path": "snyk_rules"
      }
    ]
  }
}