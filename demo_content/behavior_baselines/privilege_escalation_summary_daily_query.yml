AnalysisType: scheduled_query
QueryName: "Privilege Escalation Activity Summary Daily Query"
Enabled: true
Description: >
  Daily analysis of IAM privilege escalation activities including policy modifications,
  role assumptions, admin rights grants, and permission boundary changes with risk scoring.
Tags:
  - AI-Optimized
  - Privilege-Escalation
  - Behavior-Baselines
  - IAM-Analysis
Query: |
  WITH iam_privilege_activities AS (
    SELECT 
      DATE_TRUNC('day', p_event_time) as time_window,
      p_event_time,
      eventName,
      userIdentity:arn as actor_arn,
      COALESCE(userIdentity:userName, userIdentity:sessionContext:sessionIssuer:userName, 'unknown') as actor_name,
      userIdentity:type as user_type,
      sourceIPAddress,
      awsRegion,
      -- Panther indicator fields for enhanced threat hunting
      p_any_ip_addresses,
      p_any_usernames,
      p_any_emails,
      p_any_aws_account_ids,
      -- Target Resources
      requestParameters:userName as target_user,
      requestParameters:roleName as target_role,
      requestParameters:policyArn as policy_arn,
      requestParameters:policyName as policy_name,
      requestParameters:policyDocument as policy_document,
      requestParameters:roleArn as assumed_role_arn,
      -- Activity Classification
      CASE 
        WHEN eventName IN ('CreateUser', 'CreateRole', 'CreateServiceLinkedRole') THEN 'identity_creation'
        WHEN eventName IN ('AttachUserPolicy', 'AttachRolePolicy', 'PutUserPolicy', 'PutRolePolicy') THEN 'policy_attachment'
        WHEN eventName IN ('AssumeRole', 'AssumeRoleWithSAML', 'AssumeRoleWithWebIdentity') THEN 'role_assumption'
        WHEN eventName IN ('CreateAccessKey', 'UpdateAccessKey') THEN 'access_key_management'
        WHEN eventName IN ('DeletePermissionsBoundary', 'PutPermissionsBoundary') THEN 'permissions_boundary'
        ELSE 'other_iam'
      END as activity_type,
      -- Risk Assessment
      CASE 
        WHEN userIdentity:type = 'Root' THEN 9.0
        WHEN requestParameters:policyDocument LIKE '%AdministratorAccess%' OR requestParameters:policyArn LIKE '%AdministratorAccess%' THEN 8.5
        WHEN requestParameters:policyDocument LIKE '%"*":%"*"%' THEN 8.0
        WHEN requestParameters:policyArn LIKE '%PowerUser%' OR requestParameters:policyArn LIKE '%Admin%' THEN 7.5
        WHEN eventName = 'CreateAccessKey' AND COALESCE(userIdentity:userName, 'unknown') != COALESCE(requestParameters:userName, 'unknown') THEN 7.0
        WHEN eventName IN ('AssumeRole') AND requestParameters:roleArn LIKE '%Admin%' THEN 6.5
        WHEN eventName = 'DeletePermissionsBoundary' THEN 6.0
        WHEN eventName IN ('CreateUser', 'CreateRole') THEN 4.0
        ELSE 2.0
      END as risk_score,
      -- Admin Policy Detection
      CASE 
        WHEN requestParameters:policyDocument LIKE '%AdministratorAccess%' OR requestParameters:policyArn LIKE '%AdministratorAccess%' THEN true
        WHEN requestParameters:policyDocument LIKE '%"*":%"*"%' THEN true
        WHEN requestParameters:policyArn LIKE '%PowerUser%' OR requestParameters:policyArn LIKE '%Admin%' THEN true
        ELSE false
      END as involves_admin_privileges
    FROM panther_logs.public.aws_cloudtrail
    WHERE p_occurs_since('24h')
      AND eventSource = 'iam.amazonaws.com'
      AND eventName IN (
        'CreateUser', 'CreateRole', 'AttachUserPolicy', 'AttachRolePolicy', 
        'PutUserPolicy', 'PutRolePolicy', 'AssumeRole', 'AssumeRoleWithSAML',
        'AssumeRoleWithWebIdentity', 'CreateAccessKey', 'UpdateAccessKey',
        'DeletePermissionsBoundary', 'PutPermissionsBoundary'
      )
      AND errorCode IS NULL
  ),
  flattened_indicators AS (
    SELECT 
      time_window,
      p_event_time,
      eventName,
      actor_arn,
      actor_name,
      user_type,
      sourceIPAddress,
      awsRegion,
      target_user,
      target_role,
      policy_arn,
      policy_name,
      policy_document,
      assumed_role_arn,
      activity_type,
      risk_score,
      involves_admin_privileges,
      f_ip.value::string as ip_indicator,
      f_user.value::string as username_indicator,
      f_email.value::string as email_indicator,
      f_account.value::string as account_id_indicator
    FROM iam_privilege_activities,
    LATERAL FLATTEN(input => p_any_ip_addresses, outer => true) f_ip,
    LATERAL FLATTEN(input => p_any_usernames, outer => true) f_user,
    LATERAL FLATTEN(input => p_any_emails, outer => true) f_email,
    LATERAL FLATTEN(input => p_any_aws_account_ids, outer => true) f_account
  ),
  actor_risk_analysis AS (
    SELECT 
      time_window,
      actor_arn,
      actor_name,
      user_type,
      -- Activity Counts
      COUNT(*) as total_iam_activities,
      COUNT(CASE WHEN activity_type = 'identity_creation' THEN 1 END) as identities_created,
      COUNT(CASE WHEN activity_type = 'policy_attachment' THEN 1 END) as policies_attached,
      COUNT(CASE WHEN activity_type = 'role_assumption' THEN 1 END) as roles_assumed,
      COUNT(CASE WHEN activity_type = 'access_key_management' THEN 1 END) as keys_managed,
      COUNT(CASE WHEN activity_type = 'permissions_boundary' THEN 1 END) as boundary_modifications,
      COUNT(CASE WHEN involves_admin_privileges = true THEN 1 END) as admin_privilege_activities,
      COUNT(CASE WHEN user_type = 'Root' THEN 1 END) as root_activities,
      -- Risk Metrics
      MAX(risk_score) as max_risk_score,
      AVG(risk_score) as avg_risk_score,
      -- Target Resources
      ARRAY_AGG(DISTINCT CASE WHEN target_user IS NOT NULL THEN target_user END) as users_affected,
      ARRAY_AGG(DISTINCT CASE WHEN target_role IS NOT NULL THEN target_role END) as roles_affected,
      ARRAY_AGG(DISTINCT CASE WHEN policy_arn IS NOT NULL THEN policy_arn END) as policies_involved,
      ARRAY_AGG(DISTINCT CASE WHEN assumed_role_arn IS NOT NULL THEN assumed_role_arn END) as roles_assumed_list,
      -- Context Details
      ARRAY_AGG(DISTINCT sourceIPAddress) as source_ips,
      COUNT(DISTINCT sourceIPAddress) as unique_ips,
      ARRAY_AGG(DISTINCT awsRegion) as regions_used,
      COUNT(DISTINCT awsRegion) as unique_regions,
      -- Flattened indicator fields for enhanced threat hunting
      ARRAY_AGG(DISTINCT ip_indicator) WITHIN GROUP (ORDER BY ip_indicator) as p_any_ip_addresses,
      ARRAY_AGG(DISTINCT username_indicator) WITHIN GROUP (ORDER BY username_indicator) as p_any_usernames,
      ARRAY_AGG(DISTINCT email_indicator) WITHIN GROUP (ORDER BY email_indicator) as p_any_emails,
      ARRAY_AGG(DISTINCT account_id_indicator) WITHIN GROUP (ORDER BY account_id_indicator) as p_any_aws_account_ids,
      -- Activity Timeline
      MIN(p_event_time) as first_activity,
      MAX(p_event_time) as last_activity
    FROM flattened_indicators
    GROUP BY time_window, actor_arn, actor_name, user_type
  )
  SELECT 
    time_window,
    actor_arn,
    actor_name,
    user_type,
    total_iam_activities,
    identities_created,
    policies_attached,
    roles_assumed,
    keys_managed,
    boundary_modifications,
    admin_privilege_activities,
    root_activities,
    ROUND(max_risk_score, 1) as max_risk_score,
    ROUND(avg_risk_score, 1) as avg_risk_score,
    users_affected,
    roles_affected,
    policies_involved,
    roles_assumed_list,
    source_ips,
    unique_ips,
    regions_used,
    unique_regions,
    -- Panther indicator fields for enhanced threat hunting across real-time and historical analysis
    p_any_ip_addresses,
    p_any_usernames,
    p_any_emails,
    p_any_aws_account_ids,
    first_activity,
    last_activity,
    -- Investigation Flags
    ARRAY_CONSTRUCT_COMPACT(
      CASE WHEN user_type = 'Root' THEN 'root_account_usage' END,
      CASE WHEN admin_privilege_activities > 0 THEN 'admin_privileges_granted' END,
      CASE WHEN max_risk_score >= 8.0 THEN 'high_risk_activities' END,
      CASE WHEN identities_created > 3 THEN 'bulk_identity_creation' END,
      CASE WHEN keys_managed > 5 THEN 'excessive_key_management' END,
      CASE WHEN boundary_modifications > 0 THEN 'permissions_boundary_removal' END,
      CASE WHEN unique_ips > 2 THEN 'multiple_source_locations' END
    ) as investigation_flags
  FROM actor_risk_analysis
  WHERE max_risk_score >= 4.0  -- Focus on potentially suspicious actors
  ORDER BY max_risk_score DESC, admin_privilege_activities DESC, total_iam_activities DESC
Schedule:
  RateMinutes: 1440  # 24 hours
  TimeoutMinutes: 8