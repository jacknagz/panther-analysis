AnalysisType: rule
Enabled: true
RuleID: Panther.AdminRole.Assignment.Demo
LogTypes:
  - Panther.Audit
Severity: Low
CreateAlert: true
DisplayName: Panther Admin Role Assignment or Change
Description: Detects when a user is created with an Admin role or when a user's role is changed to Admin in Panther.
Detection:
  - Any:
      - All:
          - KeyPath: actionName
            Condition: Equals
            Value: CREATE_USER
          - KeyPath: actionParams.dynamic.input.role.value
            Condition: Equals
            Value: 85fa5eb4-3fff-46c3-bc5a-84ec5c56286b
      - All:
          - KeyPath: actionName
            Condition: Equals
            Value: UPDATE_USER
          - KeyPath: actionParams.dynamic.input.role.value
            Condition: Equals
            Value: 85fa5eb4-3fff-46c3-bc5a-84ec5c56286b
Tags:
  - demo
  - compliance.soc2
  - compliance.change_management
  - mitre.ta0003.persistence
  - mitre.ta0004.privilege_escalation
  - usecase.privileged_access_monitoring
  - asset.identity_management
  - risk.high
GroupBy:
  - KeyPath: actionParams.email
DedupPeriodMinutes: 60
Threshold: 1
SummaryAttributes:
  - actionName
  - actionParams.email
  - actor.attributes.email
  - p_event_time
Reference: https://docs.panther.com/system-configuration/panther-audit-logs
Runbook: |
  1. Confirm the user and actor involved in the admin role assignment or change.
  2. Validate if the admin role assignment was authorized.
  3. If unauthorized, immediately review and revoke the admin role.
  4. Review recent activity for the affected user and actor.
Tests:
  - Name: Create user with Admin role (should alert)
    Log:
      actionName: CREATE_USER
      actionParams:
        dynamic:
          input:
            email: test.admin@company.com
            familyName: Admin
            givenName: Test
            id: PantherSSO_test.admin@company.com
            role:
              kind: ID
              value: 85fa5eb4-3fff-46c3-bc5a-84ec5c56286b
        static: {}
    ExpectedResult: true
  - Name: Update user to Admin role (should alert)
    Log:
      actionName: UPDATE_USER
      actionParams:
        dynamic:
          input:
            email: test.user@company.com
            familyName: User
            givenName: Test
            id: PantherSSO_test.user@company.com
            role:
              kind: ID
              value: 85fa5eb4-3fff-46c3-bc5a-84ec5c56286b
        static: {}
    ExpectedResult: true
  - Name: Create user with non-Admin role (should not alert)
    Log:
      actionName: CREATE_USER
      actionParams:
        dynamic:
          input:
            email: test.viewer@company.com
            familyName: Viewer
            givenName: Test
            id: PantherSSO_test.viewer@company.com
            role:
              kind: ID
              value: 12345678-aaaa-bbbb-cccc-1234567890ab
        static: {}
    ExpectedResult: false
  - Name: Update user to non-Admin role (should not alert)
    Log:
      actionName: UPDATE_USER
      actionParams:
        dynamic:
          input:
            email: test.viewer@company.com
            familyName: Viewer
            givenName: Test
            id: PantherSSO_test.viewer@company.com
            role:
              kind: ID
              value: 12345678-aaaa-bbbb-cccc-1234567890ab
        static: {}
    ExpectedResult: false
  - Name: Update user with missing role (should not alert)
    Log:
      actionName: UPDATE_USER
      actionParams:
        dynamic:
          input:
            email: test.norole@company.com
            familyName: NoRole
            givenName: Test
            id: PantherSSO_test.norole@company.com
        static: {}
    ExpectedResult: false 